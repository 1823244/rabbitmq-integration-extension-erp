
Процедура КСП_ОбработатьЗачетПредоплаты(Объект, Отказ) Экспорт

	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ПриходныйКассовыйОрдер")
		ИЛИ ТипЗнч(Объект) = Тип("ДокументОбъект.ПоступлениеБезналичныхДенежныхСредств") Тогда
		
		Если Объект.РасшифровкаПлатежа.Количество() > 0 Тогда
			СчетНаОплату = Объект.РасшифровкаПлатежа[0].ОснованиеПлатежа;
			ЗаказКлиента = Объект.РасшифровкаПлатежа[0].ОбъектРасчетов.Объект;
		КонецЕсли;
		Если ТипЗнч(ЗаказКлиента) = Тип("ДокументСсылка.ЗаказКлиента")
			И ТипЗнч(СчетНаОплату) = Тип("ДокументСсылка.СчетНаОплатуКлиенту")
			И СчетНаОплату.КСП_СуммаЗачетаПредоплаты <> 0 
			И Объект.КСП_СуммаЗачетаПредоплаты < СчетНаОплату.КСП_СуммаЗачетаПредоплаты Тогда
			КСП_СуммаЗачетаПредоплаты = СчетНаОплату.КСП_СуммаЗачетаПредоплаты - Объект.КСП_СуммаЗачетаПредоплаты;
			РезультатПривязкиДокументов = КСП_ПривязатьДокументыОплатыКЗаказу(ЗаказКлиента, КСП_СуммаЗачетаПредоплаты);
			Если ТипЗнч(РезультатПривязкиДокументов) = Тип("Строка") Тогда
				ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Документ не учитывает предоплаты по прчине: " + РезультатПривязкиДокументов + "'"), Объект.Ссылка);
				Отказ = Истина;
			Иначе
				Объект.КСП_СуммаЗачетаПредоплаты = СчетНаОплату.КСП_СуммаЗачетаПредоплаты;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЗаказКлиента") Тогда
		
		СуммаПривязкиПредоплаты = 0;
		Для каждого Строка Из Объект.Товары Цикл
			Если Строка.КСП_НужноПривязатьПредоплатуБезСчета Тогда
				СуммаПривязкиПредоплаты = СуммаПривязкиПредоплаты + Строка.СуммаСНДС;
			КонецЕсли;
		КонецЦикла;
		
		Если СуммаПривязкиПредоплаты > 0 Тогда
			РезультатПривязкиДокументов = КСП_ПривязатьДокументыОплатыКЗаказу(Объект.Ссылка, СуммаПривязкиПредоплаты);
			Если ТипЗнч(РезультатПривязкиДокументов) = Тип("Строка") Тогда
				ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось провести документ по прчиине: " + РезультатПривязкиДокументов + "'"), Объект.Ссылка);
				Отказ = Истина;
			Иначе
				Для каждого Строка Из Объект.Товары Цикл
					Если Строка.КСП_НужноПривязатьПредоплатуБезСчета Тогда
						Строка.КСП_НужноПривязатьПредоплатуБезСчета = Ложь;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Функция КСП_ПривязатьДокументыОплатыКЗаказу(Знач ЗаказКлиента, Знач КСП_СуммаЗачетаПредоплаты)

	РезультатПривязкиДокументов = Ложь;
	СуммаЗачетаПредоплаты = КСП_СуммаЗачетаПредоплаты;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КСП_ДокументыПредоплатыЗаказаКлиента.ДокументПредоплаты КАК ДокументПредоплаты,
		|	СУММА(ПриходныйКассовыйОрдерРасшифровкаПлатежа.Сумма) КАК Сумма
		|ИЗ
		|	РегистрСведений.КСП_ДокументыПредоплатыЗаказаКлиента КАК КСП_ДокументыПредоплатыЗаказаКлиента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК ПриходныйКассовыйОрдерРасшифровкаПлатежа
		|		ПО ((ВЫРАЗИТЬ(КСП_ДокументыПредоплатыЗаказаКлиента.ДокументПредоплаты КАК Документ.ПриходныйКассовыйОрдер)) = ПриходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка)
		|ГДЕ
		|	КСП_ДокументыПредоплатыЗаказаКлиента.ЗаказКлиента = &ЗаказКлиента
		|	И КСП_ДокументыПредоплатыЗаказаКлиента.ДокументПредоплаты ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|	И ВЫРАЗИТЬ(ПриходныйКассовыйОрдерРасшифровкаПлатежа.ОбъектРасчетов.Объект КАК Документ.ПриходныйКассовыйОрдер) = ПриходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	КСП_ДокументыПредоплатыЗаказаКлиента.ДокументПредоплаты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КСП_ДокументыПредоплатыЗаказаКлиента.ДокументПредоплаты КАК ДокументПредоплаты,
		|	СУММА(ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.Сумма) КАК Сумма
		|ИЗ
		|	РегистрСведений.КСП_ДокументыПредоплатыЗаказаКлиента КАК КСП_ДокументыПредоплатыЗаказаКлиента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа
		|		ПО ((ВЫРАЗИТЬ(КСП_ДокументыПредоплатыЗаказаКлиента.ДокументПредоплаты КАК Документ.ПоступлениеБезналичныхДенежныхСредств)) = ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка)
		|ГДЕ
		|	КСП_ДокументыПредоплатыЗаказаКлиента.ЗаказКлиента = &ЗаказКлиента
		|	И КСП_ДокументыПредоплатыЗаказаКлиента.ДокументПредоплаты ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
		|	И ВЫРАЗИТЬ(ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов.Объект КАК Документ.ПоступлениеБезналичныхДенежныхСредств) = ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	КСП_ДокументыПредоплатыЗаказаКлиента.ДокументПредоплаты
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сумма";
	
	Запрос.УстановитьПараметр("ЗаказКлиента", ЗаказКлиента);
	Попытка
		ВыборкаДокументовОплаты = Запрос.Выполнить().Выбрать();
	Исключение
		ЗаписьЖурналаРегистрации(
			"СозданиеДокументовОплатыПоСчетуНаОплатуКлиента.ИзменениеДокументовПредоплаты",
			УровеньЖурналаРегистрации.Ошибка,,
			ЗаказКлиента,
			"Ошибка выборки документов оплаты по <" + Строка(ЗаказКлиента) + ">" + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		Возврат "Ошибка выборки документов оплаты по <" + Строка(ЗаказКлиента) + ">";
	КонецПопытки;
	
	НачатьТранзакцию();
	Попытка
		МассивДокументовНаУдаление = Новый Массив;
		Пока ВыборкаДокументовОплаты.Следующий() Цикл
			
			ДокументПредоплатыСсылка = ВыборкаДокументовОплаты.ДокументПредоплаты;
			ДокументПредоплатыОбъект = ВыборкаДокументовОплаты.ДокументПредоплаты.ПолучитьОбъект();
			ОбъектРасчетовЗаказКлиента = Справочники.ОбъектыРасчетов.НайтиПоРеквизиту("Объект", ЗаказКлиента);
			
			Для каждого Строка Из ДокументПредоплатыОбъект.РасшифровкаПлатежа Цикл
				Если Строка.ОбъектРасчетов.Объект = ДокументПредоплатыСсылка Тогда
					
					СтруктураПересчетаСуммы = Новый Структура;
					СтруктураПересчетаСуммы.Вставить("ЦенаВключаетНДС", Истина);
					СтруктураДействий = Новый Структура;
					СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
					
					СуммаСтроки = Строка.Сумма;
					Если Строка.Сумма <= СуммаЗачетаПредоплаты Тогда
						Строка.ОбъектРасчетов = ОбъектРасчетовЗаказКлиента;
						Строка.ОснованиеПлатежа = ЗаказКлиента;
						СуммаЗачетаПредоплаты = СуммаЗачетаПредоплаты - СуммаСтроки;
					Иначе
						НоваяСтрока = ДокументПредоплатыОбъект.РасшифровкаПлатежа.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
						
						Если ТипЗнч(ДокументПредоплатыОбъект) = Тип("ДокументОбъект.ПриходныйКассовыйОрдер") 
							И НЕ ЗначениеЗаполнено(ДокументПредоплатыОбъект.ДокументОснование) Тогда
							ДокументПредоплатыОбъект.ДокументОснование = ЗаказКлиента;
						КонецЕсли;
						НоваяСтрока.ОбъектРасчетов = ОбъектРасчетовЗаказКлиента;
						НоваяСтрока.ОснованиеПлатежа = ЗаказКлиента;
						НоваяСтрока.Сумма = СуммаЗачетаПредоплаты;
						НоваяСтрока.СуммаВзаиморасчетов = СуммаЗачетаПредоплаты;
						
						Строка.Сумма = Строка.Сумма - СуммаЗачетаПредоплаты;
						Строка.СуммаВзаиморасчетов = Строка.СуммаВзаиморасчетов - СуммаЗачетаПредоплаты;
						
						ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, Неопределено);
						
						СуммаЗачетаПредоплаты = 0;
					КонецЕсли;
					
					ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Строка, СтруктураДействий, Неопределено);
					
					Если СуммаЗачетаПредоплаты <= 0 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
			ДокументПредоплатыОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
			МассивДокументовНаУдаление.Добавить(ДокументПредоплатыСсылка);
			
			Если СуммаЗачетаПредоплаты <= 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		КСП_УдалитьЗаписиРСКСП_ДокументыПредоплатыЗаказаКлиента(МассивДокументовНаУдаление);
		РезультатПривязкиДокументов = Истина;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ЗаписьЖурналаРегистрации(
			"СозданиеДокументовОплатыПоСчетуНаОплатуКлиента.ИзменениеДокументовПредоплаты",
			УровеньЖурналаРегистрации.Ошибка,,
			ДокументПредоплатыСсылка,
			"Не удалось изменить документы оплаты по <" + Строка(ДокументПредоплатыОбъект) + ">" + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		Возврат "Не удалось изменить документы оплаты по <" + Строка(ДокументПредоплатыОбъект) + ">";
	КонецПопытки;
	
	Возврат РезультатПривязкиДокументов
	
КонецФункции

Процедура КСП_УдалитьЗаписиРСКСП_ДокументыПредоплатыЗаказаКлиента(МассивДокументовНаУдаление)

	// Проверяем все ли документы нужно удалять из РС
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПриходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка КАК ДокументПредоплаты
		|ИЗ
		|	Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК ПриходныйКассовыйОрдерРасшифровкаПлатежа
		|ГДЕ
		|	ПриходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка В (&МассивДокументовНаУдаление)
		|	И ПриходныйКассовыйОрдерРасшифровкаПлатежа.ОбъектРасчетов.Объект = ПриходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка 
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриходныйКассовыйОрдерРасшифровкаПлатежа.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка
		|ИЗ
		|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа
		|ГДЕ
		|	ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка В (&МассивДокументовНаУдаление)
		|	И ТИПЗНАЧЕНИЯ(ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.ОбъектРасчетов.Объект) = ТИП(Справочник.ОбъектыРасчетов) 
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеБезналичныхДенежныхСредствРасшифровкаПлатежа.Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументовНаУдаление", МассивДокументовНаУдаление);
	
	ВыборкаДокументовНаОплату = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДокументовНаОплату.Следующий() Цикл
		ИндексЭлемента = МассивДокументовНаУдаление.Найти(ВыборкаДокументовНаОплату.ДокументПредоплаты);
		МассивДокументовНаУдаление.Удалить(ИндексЭлемента);
	КонецЦикла;
	
	Для каждого ДокументПредоплаты Из МассивДокументовНаУдаление Цикл
		НаборЗаписей = РегистрыСведений.КСП_ДокументыПредоплатыЗаказаКлиента.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДокументПредоплаты.Установить(ДокументПредоплаты);
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

Функция КСП_ТекстЗапросаДанныхПоДокументу() Экспорт

	ТекстЗапроса = "ВЫБРАТЬ
		|	ЗаказКлиентаТовары.Ссылка КАК Документ,
		|	ЛОЖЬ КАК Выбран,
		|	ЛОЖЬ КАК Оплачена,
		|	1 КАК ИндексКартинки,
		|	СУММА(ЗаказКлиентаТовары.СуммаСНДС) КАК СуммаПлатежа,
		|	СУММА(ЗаказКлиентаТовары.СуммаСНДС) КАК СуммаКОплате,
		|	&ТекущаяДатаСеанса КАК ДатаПлатежа,
		|	ВЫРАЗИТЬ(СУММА(ЗаказКлиентаТовары.СуммаСНДС) / ЗаказКлиентаТовары.Ссылка.СуммаДокумента * 100 КАК ЧИСЛО(15, 2)) КАК ПроцентПлатежа
		|ПОМЕСТИТЬ втДанныеЗаказа
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КСП_ВыставленныеСчетаПоСтрокамЗаказа КАК КСП_ВыставленныеСчетаПоСтрокамЗаказа
		|		ПО ЗаказКлиентаТовары.КСП_ИдентификаторСтрокиЗаказа = КСП_ВыставленныеСчетаПоСтрокамЗаказа.ИдентификаторСтрокиЗаказа
		|ГДЕ
		|	ЗаказКлиентаТовары.Ссылка = &ДокументОснование
		|	И ЗаказКлиентаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)
		|	И КСП_ВыставленныеСчетаПоСтрокамЗаказа.ИдентификаторСтрокиЗаказа ЕСТЬ NULL
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказКлиентаТовары.Ссылка,
		|	ЗаказКлиентаТовары.Ссылка.СуммаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДанныеЗаказа.Документ КАК Документ,
		|	втДанныеЗаказа.Выбран КАК Выбран,
		|	втДанныеЗаказа.Оплачена КАК Оплачена,
		|	втДанныеЗаказа.ИндексКартинки КАК ИндексКартинки,
		|	втДанныеЗаказа.СуммаПлатежа КАК СуммаПлатежа,
		|	втДанныеЗаказа.СуммаКОплате КАК СуммаКОплате,
		|	втДанныеЗаказа.ДатаПлатежа КАК ДатаПлатежа,
		|	втДанныеЗаказа.ПроцентПлатежа КАК ПроцентПлатежа
		|ИЗ
		|	втДанныеЗаказа КАК втДанныеЗаказа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказКлиента.Ссылка КАК ЗаказКлиента,
		|	ЗаказКлиента.КСП_СуммаПредоплаты КАК СуммаПредоплаты
		|ПОМЕСТИТЬ втСуммаПредоплаты
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка = &ДокументОснование
		|	И ЗаказКлиента.КСП_Коллекция.КСП_ДатаПредоплаты_2 <> ДАТАВРЕМЯ(1,1,1)
		|	И НАЧАЛОПЕРИОДА(ЗаказКлиента.КСП_Коллекция.КСП_ДатаПредоплаты_2, ДЕНЬ) < НАЧАЛОПЕРИОДА(&ТекущаяДатаСеанса, ДЕНЬ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РасчетыСКлиентами.ОбъектРасчетов.Объект КАК Документ.ЗаказКлиента),
		|	ЕСТЬNULL(-СУММА(ВЫБОР
		|			КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РасчетыСКлиентами.Сумма
		|			ИНАЧЕ -РасчетыСКлиентами.Сумма
		|		КОНЕЦ), 0)
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
		|ГДЕ
		|	РасчетыСКлиентами.ОбъектРасчетов.Объект = &ДокументОснование
		|	И НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(РасчетыСКлиентами.ОбъектРасчетов.Объект КАК Документ.ЗаказКлиента).КСП_Коллекция.КСП_ДатаПредоплаты_2, ДЕНЬ) >= НАЧАЛОПЕРИОДА(&ТекущаяДатаСеанса, ДЕНЬ)
		|	//И НАЧАЛОПЕРИОДА(РасчетыСКлиентами.ДатаРегистратора, ДЕНЬ) < НАЧАЛОПЕРИОДА(&ТекущаяДатаСеанса, ДЕНЬ)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСКлиентами.ОбъектРасчетов.Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(РасчетыСКлиентами.ОбъектРасчетов.Объект КАК Документ.ЗаказКлиента) КАК ЗаказКлиента,
		|	ЕСТЬNULL(-СУММА(ВЫБОР
		|			КОГДА РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА РасчетыСКлиентами.Сумма
		|			ИНАЧЕ -РасчетыСКлиентами.Сумма
		|		КОНЕЦ), 0) КАК СуммаПлатежей
		|ПОМЕСТИТЬ втПлатежи
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
		|ГДЕ
		|	РасчетыСКлиентами.ОбъектРасчетов.Объект = &ДокументОснование
		|	И НАЧАЛОПЕРИОДА(ВЫРАЗИТЬ(РасчетыСКлиентами.ОбъектРасчетов.Объект КАК Документ.ЗаказКлиента).КСП_Коллекция.КСП_ДатаПредоплаты_2, ДЕНЬ) < НАЧАЛОПЕРИОДА(&ТекущаяДатаСеанса, ДЕНЬ)
		|	И НАЧАЛОПЕРИОДА(РасчетыСКлиентами.ДатаРегистратора, ДЕНЬ) >= НАЧАЛОПЕРИОДА(&ТекущаяДатаСеанса, ДЕНЬ)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСКлиентами.ОбъектРасчетов.Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСуммаПредоплаты.ЗаказКлиента КАК ЗаказКлиента,
		|	втСуммаПредоплаты.СуммаПредоплаты КАК СуммаПредоплаты,
		|	ВЫБОР
		|		КОГДА втСуммаПредоплаты.ЗаказКлиента.СуммаДокумента - втСуммаПредоплаты.СуммаПредоплаты - ЕСТЬNULL(втПлатежи.СуммаПлатежей, 0) >= втСуммаПредоплаты.СуммаПредоплаты
		|			ТОГДА ВЫБОР
		|				КОГДА втСуммаПредоплаты.ЗаказКлиента.СуммаДокумента - втСуммаПредоплаты.СуммаПредоплаты - ЕСТЬNULL(втПлатежи.СуммаПлатежей, 0) >= втДанныеЗаказа.СуммаПлатежа
		|					ТОГДА 0
		|				ИНАЧЕ втДанныеЗаказа.СуммаПлатежа - (втСуммаПредоплаты.ЗаказКлиента.СуммаДокумента - втСуммаПредоплаты.СуммаПредоплаты - ЕСТЬNULL(втПлатежи.СуммаПлатежей, 0))
		|			КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|			КОГДА втСуммаПредоплаты.ЗаказКлиента.СуммаДокумента - втСуммаПредоплаты.СуммаПредоплаты - ЕСТЬNULL(втПлатежи.СуммаПлатежей, 0) > 0
		|				ТОГДА втСуммаПредоплаты.СуммаПредоплаты - втДанныеЗаказа.СуммаПлатежа
		|			ИНАЧЕ втДанныеЗаказа.СуммаПлатежа
		|		КОНЕЦ
		|	КОНЕЦ КАК СуммаОстатокПредоплаты
		|ИЗ
		|	втСуммаПредоплаты КАК втСуммаПредоплаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДанныеЗаказа КАК втДанныеЗаказа
		|		ПО втСуммаПредоплаты.ЗаказКлиента = втДанныеЗаказа.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПлатежи КАК втПлатежи
		|		ПО втСуммаПредоплаты.ЗаказКлиента = втПлатежи.ЗаказКлиента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаказКлиента.Партнер КАК Партнер,
		|	ЗаказКлиента.Контрагент КАК Контрагент,
		|	ЗаказКлиента.Договор КАК Договор,
		|	ЗаказКлиента.Организация КАК Организация,
		|	ЗаказКлиента.Руководитель КАК Руководитель,
		|	ЗаказКлиента.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
		|	ЗаказКлиента.Валюта КАК Валюта,
		|	ЗаказКлиента.Ссылка КАК ДокументОснование,
		|	ЗаказКлиента.Номер КАК НомерДокумента,
		|	ЗаказКлиента.БанковскийСчет КАК БанковскийСчет,
		|	ЗаказКлиента.Организация.Префикс КАК Префикс,
		|	ЗаказКлиента.Касса КАК Касса,
		|	ЗаказКлиента.КонтактноеЛицо КАК КонтактноеЛицо,
		|	ЗаказКлиента.ЭтоЗаказКакСчет КАК ЭтоЗаказКакСчет,
		|	ЗаказКлиента.ФормаОплаты КАК ФормаОплаты,
		|	ЗаказКлиента.Ссылка КАК Документ,
		|	ЗаказКлиента.Статус КАК Статус,
		|	ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
		|		ИЛИ ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера) КАК ЕстьОшибкиХозяйственнаяОперация,
		|	ЗаказКлиента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	НЕ ЗаказКлиента.Проведен КАК ЕстьОшибкиПроведен,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЗаказКлиента.Ссылка) = ТИП(Документ.ЗаказКлиента)
		|			ТОГДА ВЫБОР
		|					КОГДА ЗаказКлиента.ТребуетсяЗалогЗаТару
		|						ТОГДА ЗаказКлиента.СуммаДокумента + ЗаказКлиента.СуммаВозвратнойТары
		|					ИНАЧЕ ЗаказКлиента.СуммаДокумента
		|				КОНЕЦ
		|		ИНАЧЕ ЗаказКлиента.СуммаДокумента
		|	КОНЕЦ КАК СуммаДокумента
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.Ссылка = &ДокументОснование";
	
	Возврат ТекстЗапроса;

КонецФункции // ()
