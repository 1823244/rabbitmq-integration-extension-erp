
&Вместо("УстановкаПараметровСеанса")
Функция КСП_УстановкаПараметровСеанса(ИменаПараметровСеанса)

	// Параметры сеанса, инициализация которых требует обращения к одним и тем же данным
	// следует инициализировать сразу группой. Для того, чтобы избежать их повторной инициализации,
	// имена уже установленных параметров сеанса сохраняются в массиве УстановленныеПараметры.
	УстановленныеПараметры = Новый Массив;

	#Если НЕ МобильныйАвтономныйСервер Тогда

		Если ИменаПараметровСеанса <> Неопределено
			И ИменаПараметровСеанса.Найти("ПараметрыКлиентаНаСервере") <> Неопределено Тогда

			ПараметрыСеанса.ПараметрыКлиентаНаСервере = Новый ФиксированноеСоответствие(Новый Соответствие);
			УстановленныеПараметры.Добавить("ПараметрыКлиентаНаСервере");
			Если ИменаПараметровСеанса.Количество() = 1 Тогда
				Возврат УстановленныеПараметры;
			КонецЕсли;
		КонецЕсли;

		Если ИменаПараметровСеанса = Неопределено Тогда
			Если ПараметрыСеанса.ПараметрыКлиентаНаСервере.Количество() = 0 Тогда
				НезаполненныеПараметрыКлиента = Новый Соответствие;
				НезаполненныеПараметрыКлиента.Вставить("ПервыйСерверныйВызовВыполнен",
				?(ТекущийРежимЗапуска() = Неопределено, Неопределено, Ложь));
				НезаполненныеПараметрыКлиента.Вставить("СостояниеДоВызоваАвторизоватьТекущегоПользователя", Истина);
				ПараметрыСеанса.ПараметрыКлиентаНаСервере = Новый ФиксированноеСоответствие(НезаполненныеПараметрыКлиента);
			КонецЕсли;
			Справочники.ВерсииРасширений.УстановкаПараметровСеанса(ИменаПараметровСеанса, УстановленныеПараметры);

			Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
				МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
				МодульМультиязычностьСервер.УстановкаПараметровСеанса(ИменаПараметровСеанса, УстановленныеПараметры);
			КонецЕсли;

			// При установке соединения с информационной базой до вызова всех остальных обработчиков.
			ПередЗапускомПрограммы();
			Возврат УстановленныеПараметры;
		КонецЕсли;

		Если Справочники.ИдентификаторыОбъектовМетаданных.ВсеПараметрыСеансаУстановлены(
			ИменаПараметровСеанса, УстановленныеПараметры) Тогда
			Возврат УстановленныеПараметры;
		КонецЕсли;

		Если ИменаПараметровСеанса.Найти("КлючДанныхПовторногоИспользования") <> Неопределено Тогда
			ПараметрыСеанса.КлючДанныхПовторногоИспользования = Новый УникальныйИдентификатор;
			УстановленныеПараметры.Добавить("КлючДанныхПовторногоИспользования");
		КонецЕсли;

		Справочники.ВерсииРасширений.УстановкаПараметровСеанса(ИменаПараметровСеанса, УстановленныеПараметры);

		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Мультиязычность") Тогда
			МодульМультиязычностьСервер = ОбщегоНазначения.ОбщийМодуль("МультиязычностьСервер");
			МодульМультиязычностьСервер.УстановкаПараметровСеанса(ИменаПараметровСеанса, УстановленныеПараметры);
		КонецЕсли;

		Если ИменаПараметровСеанса.Найти("БуферОбмена") <> Неопределено Тогда
			ПараметрыСеанса.БуферОбмена = Новый ФиксированнаяСтруктура(Новый Структура("Источник, Данные"));
			УстановленныеПараметры.Добавить("БуферОбмена");
		КонецЕсли;

		Обработчики = Новый Соответствие;
		ИнтеграцияПодсистемБСП.ПриДобавленииОбработчиковУстановкиПараметровСеанса(Обработчики);

		ОбработчикиСобственные = Новый Соответствие;
		ОбщегоНазначенияПереопределяемый.ПриДобавленииОбработчиковУстановкиПараметровСеанса(ОбработчикиСобственные);
		Для Каждого Запись Из ОбработчикиСобственные Цикл
			Обработчики.Вставить(Запись.Ключ, Запись.Значение);
		КонецЦикла;

		ВыполнитьОбработчикиУстановкиПараметровСеанса(ИменаПараметровСеанса, Обработчики, УстановленныеПараметры);

		ИнтеграцияПодсистемБСП.ПриУстановкеПараметровСеанса(ИменаПараметровСеанса);

	#КонецЕсли
	
	    УстановкаПараметровЛоггер(ИменаПараметровСеанса);

	Возврат УстановленныеПараметры;

КонецФункции 


Процедура УстановкаПараметровЛоггер(ИменаПараметровСеанса)
	
	Если ИменаПараметровСеанса = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Если ИменаПараметровСеанса.Найти("мис_ЭтоСервернаяБаза") = Неопределено И 
		 ИменаПараметровСеанса.Найти("мис_УровеньЛогов") = Неопределено И
		 ИменаПараметровСеанса.Найти("мис_КаталогФайловЛогов") = Неопределено  Тогда
		 
		 Возврат;
		 
	КонецЕсли;

	мис_УправлениеЗаданиямиСервер.УстановкаПараметровСеанса(ИменаПараметровСеанса);
	
	mis_LoggerServer.УстановкаПараметровСеанса(ИменаПараметровСеанса);
	
КонецПроцедуры 
