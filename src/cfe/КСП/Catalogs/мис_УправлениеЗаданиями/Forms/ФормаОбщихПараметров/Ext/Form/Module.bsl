
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НаименованиеЗадания = Параметры.Задание.Наименование;
	
	ТекстВопроса = НСтр("ru='"""+НаименованиеЗадания+"""?'");
	
    КонстОП =КонстантыОбщихПараметров();
	ЗначениеВДанныеФормы(КонстОП,КонстантыОбщихПараметров);
		
	Элементы.ОбщиеПараметрыИмяПараметра.СписокВыбора.ЗагрузитьЗначения(КонстОП.ВыгрузитьКолонку("ИмяПараметра"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Запуск(Команда)
	СтруктураПараметров = ПолучитьОбщиеПараметры(ОбщиеПараметры);
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ИспользоватьОбщиеПараметры",ИспользоватьОбщиеПараметры);
	СтруктураВозврата.Вставить("ОбщиеПараметры",СтруктураПараметров);
	СтруктураВозврата.Вставить("ЗапускатьВФоне",ЗапускатьВФоне);
	
	Оповестить("Запущена группа справочника мис_УправлениеЗаданиями");
	ЭтаФорма.Закрыть(СтруктураВозврата);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОбщиеПараметры(Знач ОбщиеПараметры)

	// Сделана врезка в спецификацию на подсистему управления заданиями
	// В связи с выявленными случаями указания некорректных пустых значениях 
	// в параметрах вызова  и как следствие срабатыване выборок с пустым результатом - 
	// необходимо сделать подсистему проверки, предупреждения о сомнительных параметрах.
	//Контроль  передаваемых параметров должен осуществляться следующим образом:
	//Если параметр без типа – то он должен быть формулой, а формула должна быть 
	//	непуста.
	//	Если параметр список – он не должен содержать пустых значений, 
	//		он не должен содержать неопределенное значение
	//		Если параметр ссылочного типа – он не должен содержать пустое значение, 
	//			либо неопределенное
	// Если значение логического типа – оно должно быть задано
	// Если значение число оно не должно быть нулевым
	// Если строка  она не должна быть пустая. 
	//Если параметр дата – она должна быть задана.
	//При выявлении таких некорректностей в лог сразу выводится предупреждение 
	//с указанием параметра. При интерактивном запуске также выводится предупреждение 
	//пользователю.

	ТЗОбщиеПараметры = ДанныеФормыВЗначение(ОбщиеПараметры,Тип("ТаблицаЗначений"));
	
	//Будем любые параметры конвертировать в структуру
	//Будем сразу отсекать значения Неопределено, Пустые списки, пустые даты
	
	СтруктураПараметров = Новый Структура;
	
	Для Каждого Элемент Из ТЗОбщиеПараметры Цикл
		Если Элемент.ЗначениеПараметра = Неопределено
			ИЛИ (ТипЗнч(Элемент.ЗначениеПараметра) = Тип("СписокЗначений") И Элемент.ЗначениеПараметра.Количество()=0)
			ИЛИ ТипЗнч(Элемент.ЗначениеПараметра) = Тип("Дата") И НЕ ЗначениеЗаполнено(Элемент.ЗначениеПараметра) Тогда
			// ничего не делаем. Не добавляем элемент в структуру. 
		Иначе
			Если ЗначениеЗаполнено(Элемент.ИмяПараметра) Тогда
				СтруктураПараметров.Вставить(Элемент.ИмяПараметра,Элемент.ЗначениеПараметра);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПараметров;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ОбщиеПараметры.Доступность = Форма.ИспользоватьОбщиеПараметры;
	Если  Форма.ИспользоватьОбщиеПараметры Тогда
		Элементы.ДекорацияНадпись.Заголовок = "Включен режим общих параметров";
	Иначе
		Элементы.ДекорацияНадпись.Заголовок = "";
	КонецЕсли;
	
		
КонецПроцедуры

 
&НаСервереБезКонтекста
Функция КонстантыОбщихПараметров()
		
	ТЗ = Новый ТаблицаЗначений;
	
	ТЗ.Колонки.Добавить("ИмяПараметра");
	ТЗ.Колонки.Добавить("ТипПараметра");
	ТЗ.Колонки.Добавить("ТипЗначенияСписка");
	ТЗ.Колонки.Добавить("ПустоеЗначениеТипа");
	
	НовСтрока= ТЗ.Добавить();
	НовСтрока.ИмяПараметра = "ДатаНачала";
	НовСтрока.ТипПараметра = "Дата";
	НовСтрока.ТипЗначенияСписка = Неопределено;
	
	НовСтрока= ТЗ.Добавить();
	НовСтрока.ИмяПараметра = "ДатаОкончания";
	НовСтрока.ТипПараметра = "Дата";
	НовСтрока.ТипЗначенияСписка = Неопределено;
	
	НовСтрока= ТЗ.Добавить();
	НовСтрока.ИмяПараметра = "ОтключениеИтогов";
	НовСтрока.ТипПараметра = "Булево";
	НовСтрока.ТипЗначенияСписка = Неопределено;
	
	НовСтрока= ТЗ.Добавить();
	НовСтрока.ИмяПараметра = "Параллелизм";
	НовСтрока.ТипПараметра = "Булево";
	НовСтрока.ТипЗначенияСписка = Неопределено;

	Для Каждого Стр Из ТЗ Цикл
		Если Стр.ТипПараметра = "СписокЗначений" Тогда
			ПустоеЗначениеТипа = мис_УправлениеЗаданиямиОбщегоНазначенияСервер.ПолучитьПустоеЗначениеТипа(Тип(Стр.ТипЗначенияСписка));
		Иначе
			ПустоеЗначениеТипа = мис_УправлениеЗаданиямиОбщегоНазначенияСервер.ПолучитьПустоеЗначениеТипа(Тип(Стр.Типпараметра));
		КонецЕсли;
		Стр.ПустоеЗначениеТипа = ПустоеЗначениеТипа;
	КонецЦикла;

	Возврат ТЗ;
КонецФункции

&НаКлиенте
Процедура ИспользоватьОбщиеПараметрыПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаСервере
Функция СтруктураТиповПоИмениПараметра(Знач ИмяПараметра)
	
	КонстОП = ДанныеФормыВЗначение(ЭтаФорма.КонстантыОбщихПараметров,Тип("ТаблицаЗначений"));
	
	СтрокаТаблицы = КонстОП.Найти(ИмяПараметра,"ИмяПараметра");
	
	Если СтрокаТаблицы <> Неопределено Тогда
		Возврат Новый Структура("ИмяПараметра,ТипПараметра,ТипЗначенияСписка,ПустоеЗначениеТипа",ИмяПараметра,СтрокаТаблицы.ТипПараметра,СтрокаТаблицы.ТипЗначенияСписка,СтрокаТаблицы.ПустоеЗначениеТипа);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОбщиеПараметрыИмяПараметраПриИзменении(Элемент)
	ТД = Элементы.ОбщиеПараметры.ТекущиеДанные;
	СтруктураТипов = СтруктураТиповПоИмениПараметра(ТД.ИмяПараметра);
	
	Если СтруктураТипов<>Неопределено Тогда
		Если СтруктураТипов.ТипПараметра = "СписокЗначений" Тогда
			Список = Новый СписокЗначений;
			Список.ТипЗначения = Новый ОписаниеТипов(СтруктураТипов.ТипЗначенияСписка);
			ТД.ЗначениеПараметра = Список;
		Иначе
			ТД.ЗначениеПараметра = СтруктураТипов.ПустоеЗначениеТипа;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	ЭтаФорма.Закрыть(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ЗапускВФонеНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗапускВФоне(Команда)
	ЗапускВФонеНаСервере();
	
	СтруктураПараметров = ПолучитьОбщиеПараметры(ОбщиеПараметры);
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ИспользоватьОбщиеПараметры",ИспользоватьОбщиеПараметры);
	СтруктураВозврата.Вставить("ОбщиеПараметры",СтруктураПараметров);
	СтруктураВозврата.Вставить("ЗапускатьВФоне",Истина);
	
	Оповестить("Запущена группа справочника мис_УправлениеЗаданиями");
	ЭтаФорма.Закрыть(СтруктураВозврата);
КонецПроцедуры
