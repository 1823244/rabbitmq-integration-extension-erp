
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ГруппаЗаданий = Параметры.КопируемыйЭлемент;
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Если Вопрос("Скопировать группу заданий?",РежимДиалогаВопрос.ДаНетОтмена,,КодВозвратаДиалога.Нет)<>КодВозвратаДиалога.Да Тогда
		ЭтаФорма.Закрыть();
	Иначе
		КопироватьШаблонС();
		ЭтаФорма.Закрыть(1);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Функция КопироватьШаблонС() Экспорт
	
	Попытка
		//Шаблон = Элементы.Список.ТекущаяСтрока;
		СписПар = Новый СписокЗначений;
		СписПар.Добавить(ГруппаЗаданий, "Ссылка");
		ПараметрыВызова = Новый ХранилищеЗначения(СписПар, Новый СжатиеДанных(9));
		ИдВызова	= mis_LoggerServer.СоздатьИдВызова (ИдВызова, "Копирование группы заданий "+Строка(ГруппаЗаданий)+". "+Строка(ТекущаяДатаСеанса()), ТекущаяДатаСеанса(), "КопироватьШаблонС", ПараметрыВызова);

		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Спр.Ссылка КАК Ссылка,
		|	Спр.Наименование КАК Наименование
		|ИЗ
		|	Справочник.мис_УправлениеЗаданиями КАК Спр
		|ГДЕ
		|	Спр.Ссылка В ИЕРАРХИИ(&Родитель)
		|	И НЕ Спр.ПометкаУдаления
		|	И НЕ Спр.ЭтоГруппа
		|";

		Запрос.УстановитьПараметр("Родитель", ГруппаЗаданий);

		Результат = Запрос.Выполнить();
		
		НовГруппа = ГруппаЗаданий.Скопировать();
		НовГруппа.Наименование = Префикс + ГруппаЗаданий.Наименование + Суффикс;
		Если ОчиститьПолеСледующаяПроцедура Тогда
			НовГруппа.СледующаяПроцедура = Неопределено;
		КонецЕсли;
		НовГруппа.Записать();
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл

			НовЭл = Выборка.Ссылка.Скопировать();
			НовЭл.Наименование = Префикс + Выборка.Наименование + Суффикс;
			
			//в шаблонах и доп начислениях используются исходные счета
			Если ЗаменитьИсходныеСчета Тогда
				ПараметрыПроцедуры = НовЭл.ПараметрыПроцедуры.Получить();
				Для Каждого Стр Из ПараметрыПроцедуры Цикл
					Если НРег(СокрЛП(Стр.Параметр)) = "списоксчетов" Тогда
						Стр.Значение = НовыеИсходныеСчета;
						Стр.ТипЗначения = Новый ОписаниеТипов("СписокЗначений");
						Прервать;
					КонецЕсли;
				КонецЦикла;
				НовЭл.ПараметрыПроцедуры = Новый ХранилищеЗначения(ПараметрыПроцедуры,Новый СжатиеДанных(9));
			КонецЕсли;
			
			//в ФИФО используются сводные счета
			Если ЗаменитьСводныеСчета Тогда
				ПараметрыПроцедуры = НовЭл.ПараметрыПроцедуры.Получить();
				Для Каждого Стр Из ПараметрыПроцедуры Цикл
					Если НРег(СокрЛП(Стр.Параметр)) = "сводныесчета" Тогда
						Стр.Значение = НовыеСводныеСчета;
						Стр.ТипЗначения = Новый ОписаниеТипов("СписокЗначений");
						Прервать;
					КонецЕсли;
				КонецЦикла;
				НовЭл.ПараметрыПроцедуры = Новый ХранилищеЗначения(ПараметрыПроцедуры,Новый СжатиеДанных(9));
			КонецЕсли;
			
			Если ОчиститьПолеСледующаяПроцедура Тогда
				НовЭл.СледующаяПроцедура = Неопределено;
			КонецЕсли;

			НовЭл.Родитель = НовГруппа.Ссылка;
			НовЭл.Записать();
			
		КонецЦикла;
				
		mis_LoggerServer.Информация(ИДВызова, "Информация", "Ошибок нет");
		
		Возврат Истина;
	Исключение
		mis_LoggerServer.Ошибка(ИДВызова, "Ошибка", ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
КонецФункции

