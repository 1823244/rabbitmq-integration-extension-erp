
Функция ПараметрыПроцедурыИзРеквизита(Ссылка)
	Возврат Ссылка.ПараметрыПроцедуры.Получить();
КонецФункции

Функция ТаблицаПараметровВХранилищеЗначения(Таблица)
	Возврат Новый ХранилищеЗначения(Таблица,Новый СжатиеДанных(9));
КонецФункции

Функция ТаблицаПараметровВСтруктуру(ТаблицаПараметров)
	Структура = Новый Структура;
	
	Для Каждого Стр Из ТаблицаПараметров Цикл
		Если Стр.ЭтоВыражение Тогда
			Структура.Вставить(Стр.Параметр,Вычислить(Стр.Значение));
		Иначе
			Структура.Вставить(Стр.Параметр,Стр.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Структура;
КонецФункции

&НаКлиенте
Процедура ПараметрыПроцедурыЭтоВыражениеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ПараметрыПроцедуры.ТекущиеДанные;
	Если ТекущиеДанные.ЭтоВыражение Тогда
		ТекущиеДанные.ТипЗначения = Новый ОписаниеТипов("Строка");
	Иначе
		ТекущиеДанные.ТипЗначения = Новый ОписаниеТипов(,Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СпрОбъект = РеквизитФормыВЗначение("Объект");
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ПарамПроцедуры    = Параметры.ЗначениеКопирования.ПараметрыПроцедуры.Получить();
		РасписаниеЗадания = Параметры.ЗначениеКопирования.Расписание.Получить();
		Если ТипЗнч(РасписаниеЗадания) <> Тип("РасписаниеРегламентногоЗадания") Тогда
			//создаем новую переменную типа расписаниеРегламентногоЗаданя
			РасписаниеЗадания = мис_УправлениеЗаданиямиКлиентСервер.ИнициализацияРасписания();
		Иначе
			// проверяем расписание
			Если РасписаниеЗадания.ДниНедели = Неопределено ИЛИ РасписаниеЗадания.ДниНедели.Количество() = 0 Тогда
				Массив = Новый Массив;
				Для ин=1 По 7 Цикл
					Массив.Добавить(ин);
				КонецЦикла;
				РасписаниеЗадания.ДниНедели = Массив;
			КонецЕсли;
		КонецЕсли;

	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Ссылка) И НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		// новый
		РасписаниеЗадания = мис_УправлениеЗаданиямиКлиентСервер.ИнициализацияРасписания();
	Иначе
		ПарамПроцедуры = СпрОбъект.ПараметрыПроцедуры.Получить();
		РасписаниеЗадания = СпрОбъект.Расписание.Получить();
	КонецЕсли;
	
	Если ПарамПроцедуры <> Неопределено Тогда
		ЗначениеВДанныеФормы(ПарамПроцедуры,ПараметрыПроцедуры);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// todo 2020-04-21 позже подумать, стоит ли разрешать создание регл заданий для элементов
	// а пока отключим
	Если объект.ЗапускПоРасписанию Тогда
		Отказ = Истина;
		ВызватьИсключение "Нельзя включать расписание в элементе справочника! Можно только в группе!";
	КонецЕсли;
	ПараметрыЗаписи.Вставить("ПараметрыПроцедуры",ПараметрыПроцедуры);
	ПараметрыЗаписи.Вставить("РасписаниеЗадания" ,РасписаниеЗадания);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТаблицаПараметров = ДанныеФормыВЗначение(ПараметрыЗаписи.ПараметрыПроцедуры,Тип("ТаблицаЗначений"));
	ТекущийОбъект.ПараметрыПроцедуры = ТаблицаПараметровВХранилищеЗначения(ТаблицаПараметров);
	
	// ЕНС. отключено. по расписанию можно запускать только группы справочника!
	//ТекущийОбъект.Расписание = Новый ХранилищеЗначения(ПараметрыЗаписи.РасписаниеЗадания,Новый СжатиеДанных(9));
	//
	//мис_РегламентныеЗадания.ПередЗаписьюЭлементаСправочникаЗаданий(ТекущийОбъект,ПараметрыЗаписи.РасписаниеЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьОткрытьРасписаниеНажатие(Элемент)
	
	Если ТипЗнч(РасписаниеЗадания) <> Тип("РасписаниеРегламентногоЗадания") Тогда
		//создаем новую переменную типа расписаниеРегламентногоЗаданя
		РасписаниеЗадания = мис_УправлениеЗаданиямиКлиентСервер.ИнициализацияРасписания();
	КонецЕсли;
	
	Асинк = Новый ОписаниеОповещения("Асинк_НадписьОткрытьРасписаниеНажатие", ЭтотОбъект);
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РасписаниеЗадания);
	Диалог.Показать(Асинк);
	
КонецПроцедуры

&НаКлиенте
Процедура Асинк_НадписьОткрытьРасписаниеНажатие(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено  Тогда
		РасписаниеЗадания = Результат;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокПараметровИзИсточника(Источник)
	
	Возврат Источник.ПараметрыПроцедуры.Получить();
КонецФункции

&НаКлиенте
Процедура Заполнить(Команда)
	Рез  = ОткрытьФормуМодально("Справочник.мис_УправлениеЗаданиями.ФормаВыбора");
	Если Рез <> Неопределено Тогда
		ЗаполнитьПараметрыСерв(Рез);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыСерв(спрСсылка)
	ПарамПроцедуры = спрСсылка.ПараметрыПроцедуры.Получить();
	Если ПарамПроцедуры <> Неопределено Тогда
		Для Каждого Парам Из ПарамПроцедуры Цикл
			ЗаполнитьЗначенияСвойств(ПараметрыПроцедуры.Добавить(),Парам);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроцедурыЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ТипЗнч(Элементы.ПараметрыПроцедуры.ТекущиеДанные.Значение) = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СписокЗначений",Элементы.ПараметрыПроцедуры.ТекущиеДанные.Значение);
		//ПараметрыФормы.Вставить("ТипСписка",ВыбТип.Значение);
		Значение = ОткрытьФормуМодально("Справочник.мис_УправлениеЗаданиями.Форма.ФормаСпискаЗначений",ПараметрыФормы);
		Если Значение <> Неопределено Тогда
			Элементы.ПараметрыПроцедуры.ТекущиеДанные.Значение = Значение;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(Элементы.ПараметрыПроцедуры.ТекущиеДанные.Значение) Тогда
		Элементы.ПараметрыПроцедуры.ПодчиненныеЭлементы.ПараметрыПроцедурыЗначение.ВыбиратьТип = Ложь;
	ИначеЕсли НЕ ЗначениеЗаполнено(Элементы.ПараметрыПроцедуры.ТекущиеДанные.Значение) Тогда
		Элементы.ПараметрыПроцедуры.ПодчиненныеЭлементы.ПараметрыПроцедурыЗначение.ВыбиратьТип = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроцедурыЗначениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение = Тип("СписокЗначений") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СписокЗначений",Элементы.ПараметрыПроцедуры.ТекущиеДанные.Значение);
		//ПараметрыФормы.Вставить("ТипСписка",ВыбТип.Значение);
		Значение = ОткрытьФормуМодально("Справочник.мис_УправлениеЗаданиями.Форма.ФормаСпискаЗначений",ПараметрыФормы);
		Если Значение <> Неопределено Тогда
			Элементы.ПараметрыПроцедуры.ТекущиеДанные.Значение = Значение;
		КонецЕсли;
	КонецЕсли;
	
	мТипы = Новый Массив;
	мТипы.Добавить(ТипЗнч(Элементы.ПараметрыПроцедуры.ТекущиеДанные.Значение));
	Элементы.ПараметрыПроцедуры.ТекущиеДанные.ТипЗначения = Новый ОписаниеТипов(мТипы);

КонецПроцедуры

&НаКлиенте
Процедура ЗапускПоРасписаниюПриИзменении(Элемент)
	Объект.Активность = Объект.ЗапускПоРасписанию;

КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроцедурыЗначениеПриИзменении(Элемент)
	мТипы = Новый Массив;
	мТипы.Добавить(ТипЗнч(Элементы.ПараметрыПроцедуры.ТекущиеДанные.Значение));
	Элементы.ПараметрыПроцедуры.ТекущиеДанные.ТипЗначения = Новый ОписаниеТипов(мТипы);
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл(Команда)
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = "Выберите файл для загрузки";
	ДиалогВыбораФайла.Фильтр    = "(*.xls;*.xlsx)|*.xls;*.xlsx";
	
	Если НЕ ДиалогВыбораФайла.Выбрать() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	//нужно показать пользователю список листов
	Попытка
		COMОбъект = Новый COMОбъект("Excel.Application");
	Исключение
		Возврат;
	КонецПопытки;

	Попытка
		Workbook      = COMОбъект.Workbooks.Open(ДиалогВыбораФайла.ПолноеИмяФайла);
		//Sheet         = Workbook.Worksheets(1);
	Исключение
		COMОбъект.Quit();
		COMОбъект = 0;
		//СообщениеОбОшибке = НСтр("ru = 'Не удалось прочитать данные из файла. Подробности: '")
		//					+ КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		//ВызватьИсключение СообщениеОбОшибке;
		Возврат;
	КонецПопытки;
	
	СписокЛистов = Новый СписокЗначений;
	Для i = 1 По Workbook.Sheets.Count() Цикл
		СписокЛистов.Добавить(Workbook.Sheets.item(i).Name);
	КонецЦикла;
	
	А = СписокЛистов.ВыбратьЭлемент("Выберите лист");
	Если А = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайла = ДиалогВыбораФайла.ПолноеИмяФайла;
	ИмяЛиста = А.Значение;
	
	Элементы.ПараметрыПроцедуры.ТекущиеДанные.Значение = Символ(34)+ИмяФайла+Символ(34)+" "+Символ(34)+ИмяЛиста+Символ(34);
	
	Модифицированность = Истина;
	
	COMОбъект.Quit();
	COMОбъект = 0;
КонецПроцедуры

&НаСервере
Процедура ДобавитьИдВызоваВТаблицуНаСервере()
	НовСтр = ПараметрыПроцедуры.Добавить();
	НовСтр.Значение = "ИдВызова";
	НовСтр.Параметр = "ИдВызова";
	НовСтр.ЭтоВыражение = Истина;
	НовСтр.ТипЗначения = Тип("Строка");
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИдВызоваВТаблицу(Команда)
	ДобавитьИдВызоваВТаблицуНаСервере();
КонецПроцедуры

