

// Инициализация настроек из кода 
// Добавляетт и инициализирует начальными занчениями настройки 
// Это происходит при смене версии инициализации настроек.
//
// Возвращаемое значение:
//   Булево   - инициализация прошла без ошибок
//
Функция ИнициализацияОбщихНастроек() Экспорт
	
	// При добавлении новой настройки версию надо увеличить на 1
	ТекущаяВерсия  = 2;
	
	// проверяем надо ли инициировать настройки
	Если Константы.ксп_ТекущаяВерсияНастроекRetailCRM.Получить() >= ТекущаяВерсия Тогда
		Возврат истина;
	КонецЕсли;

	// таблица значений нужня для того что бы ее передать в превелигированный модуль для установки 
	// значений настроек , так как инициалицация может быть под пользователем без 
	// полных прав
	ТаблицаИнициализации = новый ТаблицаЗначений;
	ТаблицаИнициализации.Колонки.Добавить("Имя",новый ОписаниеТипов("Строка",,,,новый КвалификаторыСтроки(50,ДопустимаяДлина.Переменная)));
	ТаблицаИнициализации.Колонки.Добавить("ИмяРодителя",новый ОписаниеТипов("Строка",,,,новый КвалификаторыСтроки(50,ДопустимаяДлина.Переменная)));
	ТаблицаИнициализации.Колонки.Добавить("ЭтоГруппа", новый ОписаниеТипов("Булево"));
	ТаблицаИнициализации.Колонки.Добавить("ТипЗначения");
	// надо добавить типы ПВХ
	ТаблицаИнициализации.Колонки.Добавить("Значение", 	Метаданные.ПланыВидовХарактеристик.КСП_НастройкиRetailCRM.Тип);
	
	
	
	
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Инициализация настроек для рабочей базы 
	
	// группа настроек
	ИмяГруппы = "elis";
	ДобавитьГруппуНастроек(ИмяГруппы, ТаблицаИнициализации);
	
	// настройки
	ДобавитьНастройку("ИмяСервера",					ИмяГруппы, "elis.retailcrm.ru",, 										ТаблицаИнициализации);
	ДобавитьНастройку("КлючCRM",					ИмяГруппы, "7AtM6a80tgC2aiF1uqbztTaqQmaY92no",, 						ТаблицаИнициализации);
	ДобавитьНастройку("КодМагазина",				ИмяГруппы, "elis",, 													ТаблицаИнициализации);
	ДобавитьНастройку("Склад",						ИмяГруппы, Справочники.Склады.ПустаяСсылка(),,							ТаблицаИнициализации);
	ДобавитьНастройку("Доставка", 					ИмяГруппы, Справочники.Номенклатура.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ЗакупочнаяЦена", 			ИмяГруппы, Справочники.ВидыЦен.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ЦенаПродажи", 				ИмяГруппы, Справочники.ВидыЦен.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("Организация", 				ИмяГруппы, Справочники.Организации.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("БанковскийСчет", 			ИмяГруппы, Справочники.БанковскиеСчетаОрганизаций.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ОсновнаяКасса", 				ИмяГруппы, Справочники.Кассы.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("Валюта", 					ИмяГруппы, Справочники.Валюты.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("Налогообложение", 			ИмяГруппы, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС,,	ТаблицаИнициализации);
	ДобавитьНастройку("ЦенаВключаетНДС", 			ИмяГруппы, Истина,,	ТаблицаИнициализации);
	ДобавитьНастройку("Приоритет", 					ИмяГруппы, Справочники.Приоритеты.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ТиповоеСоглашение", 			ИмяГруппы, Справочники.СоглашенияСКлиентами.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ГруппаДоступаПартнеров", 	ИмяГруппы, Справочники.ГруппыДоступаПартнеров.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ОтсрочкаДней", 				ИмяГруппы, 5,,	ТаблицаИнициализации);
	ДобавитьНастройку("РозничныйПокупатель", 		ИмяГруппы, Справочники.Контрагенты.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("СозданиеВозвратов", 			ИмяГруппы, Ложь,,	ТаблицаИнициализации);
	ДобавитьНастройку("GUIDОрганизации", 			ИмяГруппы, Ложь,,	ТаблицаИнициализации);
	
	
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Инициализация настроек для тестовой базы 
	
	// группа настроек
	ИмяГруппы = "20line";
	ДобавитьГруппуНастроек(ИмяГруппы, ТаблицаИнициализации);
	
	// настройки
	ДобавитьНастройку("ИмяСервера",					ИмяГруппы, "20line.retailcrm.ru",, 										ТаблицаИнициализации);
	ДобавитьНастройку("КлючCRM",					ИмяГруппы, "7AtM6a80tgC2aiF1uqbztTaqQmaY92no",, 						ТаблицаИнициализации);
	ДобавитьНастройку("КодМагазина",				ИмяГруппы, "20line",, 													ТаблицаИнициализации);
	ДобавитьНастройку("Склад",						ИмяГруппы, Справочники.Склады.ПустаяСсылка(),,							ТаблицаИнициализации);
	ДобавитьНастройку("Доставка", 					ИмяГруппы, Справочники.Номенклатура.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ЗакупочнаяЦена", 			ИмяГруппы, Справочники.ВидыЦен.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ЦенаПродажи", 				ИмяГруппы, Справочники.ВидыЦен.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("Организация", 				ИмяГруппы, Справочники.Организации.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("БанковскийСчет", 			ИмяГруппы, Справочники.БанковскиеСчетаОрганизаций.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ОсновнаяКасса", 				ИмяГруппы, Справочники.Кассы.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("Валюта", 					ИмяГруппы, Справочники.Валюты.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("Налогообложение", 			ИмяГруппы, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС,,	ТаблицаИнициализации);
	ДобавитьНастройку("ЦенаВключаетНДС", 			ИмяГруппы, Истина,,	ТаблицаИнициализации);
	ДобавитьНастройку("Приоритет", 					ИмяГруппы, Справочники.Приоритеты.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ТиповоеСоглашение", 			ИмяГруппы, Справочники.СоглашенияСКлиентами.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ГруппаДоступаПартнеров", 	ИмяГруппы, Справочники.ГруппыДоступаПартнеров.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("ОтсрочкаДней", 				ИмяГруппы, 5,,	ТаблицаИнициализации);
	ДобавитьНастройку("РозничныйПокупатель", 		ИмяГруппы, Справочники.Контрагенты.ПустаяСсылка(),,	ТаблицаИнициализации);
	ДобавитьНастройку("СозданиеВозвратов", 			ИмяГруппы, Ложь,,	ТаблицаИнициализации);
	ДобавитьНастройку("GUIDОрганизации", 			ИмяГруппы, Ложь,,	ТаблицаИнициализации);

	
	ОписаниеОшибки = "";
	Если не ИнициализацияНастроекНаОсновеТаблицы(ТаблицаИнициализации, ОписаниеОшибки) Тогда
		Сообщение = СтрШаблон("Ошибка инициализации настроек. Причина: %1",ОписаниеОшибки);
		Сообщить(Сообщение,СтатусСообщения.Важное);
		Возврат ложь;
	КонецЕсли;
	
	Константы.ксп_ТекущаяВерсияНастроекRetailCRM.Установить(ТекущаяВерсия);	
	Возврат истина;
КонецФункции // ()


Процедура ДобавитьНастройку(Имя, ИмяРодителя, ЗначениеНастройки , ТипЗначения = Неопределено, ТаблицаИнициализации)

	Новая = ТаблицаИнициализации.Добавить();
	Новая.Имя 			= Имя;
	Новая.ИмяРодителя 	= ИмяРодителя;
	Новая.ЭтоГруппа 	= ложь;
	Новая.Значение 	= ЗначениеНастройки;
	
	Если ТипЗначения = Неопределено Тогда
		// автоопределение типа
		
		ТекущийТип = ТипЗнч(ЗначениеНастройки);
		МассивТипов = новый Массив;
		МассивТипов.Добавить(ТекущийТип);
		
		Новая.ТипЗначения 	= новый ОписаниеТипов(МассивТипов);
	иначе
		Новая.ТипЗначения 	= ТипЗначения;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьГруппуНастроек(Имя, ТаблицаИнициализации)

	Новая = ТаблицаИнициализации.Добавить();
	Новая.Имя 			= Имя;
	Новая.ЭтоГруппа 	= Истина;

КонецПроцедуры

// Получаем следующий код планов видов характеристик общих настроек 
// Проблема в том, что если есть пердопределенные элементы, то 
// автонумерация не учитывает их номер 
Функция ПолучитьСледующийСвободныйНомерОбщихНастроек()

	МаксимальныйНомер = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОбщиеНастройки.Код КАК Код
		|ИЗ
		|	ПланВидовХарактеристик.КСП_НастройкиRetailCRM КАК ОбщиеНастройки
		|
		|УПОРЯДОЧИТЬ ПО
		|	Код УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() тогда
		Код = ВыборкаДетальныеЗаписи.Код;
		МаксимальныйНомер = число(Код);
	КонецЕсли;
	
	МаксимальныйНомер = МаксимальныйНомер +1;
	
	Возврат Формат(МаксимальныйНомер, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=0");
КонецФункции // ()

// 
Функция ИнициализацияНастроекНаОсновеТаблицы(ТаблицаИнициализации, ОписаниеОшибки)

	БезОшибок = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбщиеНастройки.Ссылка,
		|	ОбщиеНастройки.Наименование КАК Имя,
		|	ОбщиеНастройки.Родитель.Наименование КАК ИмяРодителя
		|ИЗ
		|	ПланВидовХарактеристик.КСП_НастройкиRetailCRM КАК ОбщиеНастройки";
	
	НайденыеНастройки = Запрос.Выполнить().Выгрузить();
	ХэшПоиска = новый Соответствие;
	Для каждого СтрНастройка Из НайденыеНастройки Цикл
		КлючПоиска = СтрШаблон("%1_%2",СтрНастройка.ИмяРодителя, СтрНастройка.Имя);
		ХэшПоиска.Вставить(КлючПоиска,СтрНастройка.Ссылка);
	КонецЦикла;
	
	// порядок следования важен , сначало группы , потом 
	МаксИнд = ТаблицаИнициализации.Количество()-1;
	
	Для Инд = 0 По МаксИнд Цикл
		
		СтрНастройка = ТаблицаИнициализации[Инд];
		КлючПоиска = СтрШаблон("%1_%2",СтрНастройка.ИмяРодителя, СтрНастройка.Имя);
		НайденаяНастройка =  ХэшПоиска.Получить(КлючПоиска);
		
		// Если настройка найдена не проводим инициализацию  
		Если НайденаяНастройка = Неопределено Тогда
			
			Если СтрНастройка.ЭтоГруппа Тогда
				НоваяНастройка = ПланыВидовХарактеристик.КСП_НастройкиRetailCRM.СоздатьГруппу();
			иначе
				НоваяНастройка = ПланыВидовХарактеристик.КСП_НастройкиRetailCRM.СоздатьЭлемент();
				
				НоваяНастройка.ТипЗначения =  СтрНастройка.ТипЗначения;
				
				КлючПоискаРодителя = СтрШаблон("_%1",СтрНастройка.ИмяРодителя);
				НайденаяНастройка =  ХэшПоиска.Получить(КлючПоискаРодителя);
				
				Если НайденаяНастройка = Неопределено Тогда
					// не найден родитель , это плохо 	
					ОписаниеОшибки = СтрШаблон("%1%2Не найден родитель [%3] настройки [%4]. Пропускаем запись настройки",
												ОписаниеОшибки,
												?(ПустаяСтрока(ОписаниеОшибки),"",Символы.ПС),
												СтрНастройка.ИмяРодителя,
												СтрНастройка.Имя);
					БезОшибок = ложь;
					Продолжить;
				КонецЕсли;
				НоваяНастройка.Родитель = НайденаяНастройка; // ссылка на найденого родителя
			КонецЕсли;
			
			НоваяНастройка.Наименование = СтрНастройка.Имя;
			
			НоваяНастройка.Код = ПолучитьСледующийСвободныйНомерОбщихНастроек();
			
			Попытка
			    НоваяНастройка.Записать();
			Исключение
				ОписаниеОшибки = СтрШаблон("%1%2Ошибка при записи настройки [%3%4] Причина:%5",
									ОписаниеОшибки,
									?(ПустаяСтрока(ОписаниеОшибки),"",Символы.ПС),
									?(СтрНастройка.ЭтоГруппа,"Группа: ",СтрНастройка.ИмяРодителя+"."),
									СтрНастройка.Имя,
									ОписаниеОшибки());
				БезОшибок = ложь;
				Продолжить;
			КонецПопытки;
			
			// Записываем значение для элемента
			Если не СтрНастройка.ЭтоГруппа Тогда
				МенЗап = РегистрыСведений.ксп_ЗначенияНастроекRetailCRM.СоздатьМенеджерЗаписи();
			    МенЗап.Настройка 	= НоваяНастройка.Ссылка;
				МенЗап.Значение 	= СтрНастройка.Значение;
				Попытка
					МенЗап.Записать();
				Исключение
					ОписаниеОшибки = СтрШаблон("%1%2Ошибка при записи значения настройки [%3.%4] Причина:%5",
					ОписаниеОшибки,
					?(ПустаяСтрока(ОписаниеОшибки),"",Символы.ПС),
					СтрНастройка.ИмяРодителя,
					СтрНастройка.Имя,
					ОписаниеОшибки());
					БезОшибок = ложь;
					Продолжить;
				КонецПопытки;
			иначе
			КонецЕсли;
			// добавим в хэш информацию об настройке 
			ХэшПоиска.Вставить(КлючПоиска,НоваяНастройка.Ссылка);

		КонецЕсли;
	КонецЦикла;
	
	Возврат БезОшибок;
КонецФункции // ()

// Получение одной настройки
Функция ПолучитьНастройку(ИмяРодителя,ИмяНастройки) Экспорт
	
	ЗначениеНастройки = Неопределено;
	
	Если не ИнициализацияОбщихНастроек() Тогда
		Возврат ЗначениеНастройки;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбщиеНастройки.Ссылка
		|ПОМЕСТИТЬ ВтНастройка
		|ИЗ
		|	ПланВидовХарактеристик.КСП_НастройкиRetailCRM КАК ОбщиеНастройки
		|ГДЕ
		|	ОбщиеНастройки.Наименование = &Имя
		|	И ОбщиеНастройки.Родитель.Наименование = &ИмяРодителя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗначениеОбщихНастроек.Значение
		|ИЗ
		|	ВтНастройка КАК ВтНастройка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ксп_ЗначенияНастроекRetailCRM КАК ЗначениеОбщихНастроек
		|		ПО ВтНастройка.Ссылка = ЗначениеОбщихНастроек.Настройка";
	
	Запрос.УстановитьПараметр("Имя", ИмяНастройки);
	Запрос.УстановитьПараметр("ИмяРодителя", ИмяРодителя);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗначениеНастройки = ВыборкаДетальныеЗаписи.Значение;
	КонецЦикла;
	
	Возврат ЗначениеНастройки;
КонецФункции // ()

// Получение писка настроек группы в виде структуры 
Функция ПолучитьНастройкиГруппы( ИмяГруппы ) Экспорт
	
	СтруктураНастроек = новый Структура;	
	
	Если не ИнициализацияОбщихНастроек() Тогда
		Возврат СтруктураНастроек;
	КонецЕсли;

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбщиеНастройки.Ссылка,
		|	ОбщиеНастройки.Наименование КАК Имя
		|ПОМЕСТИТЬ ВтНастройка
		|ИЗ
		|	ПланВидовХарактеристик.КСП_НастройкиRetailCRM КАК ОбщиеНастройки
		|ГДЕ
		|	ОбщиеНастройки.Родитель.Наименование = &ИмяРодителя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтНастройка.Имя,
		|	ЗначениеОбщихНастроек.Значение
		|ИЗ
		|	ВтНастройка КАК ВтНастройка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ксп_ЗначенияНастроекRetailCRM КАК ЗначениеОбщихНастроек
		|		ПО ВтНастройка.Ссылка = ЗначениеОбщихНастроек.Настройка";
	
	Запрос.УстановитьПараметр("ИмяРодителя", ИмяГруппы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтруктураНастроек.Вставить(ВыборкаДетальныеЗаписи.Имя, ВыборкаДетальныеЗаписи.Значение);
	КонецЦикла;
	
	Возврат СтруктураНастроек;
КонецФункции // ()



// Получение настроек по подсистеме RetailCRM. 
// Пропишим в коде фиксированные настройки , потом в эту функцию 
// добавим вызов к регистру настроек по подсистемам , но его надо еще сделать 
// для ускорения прописываем настройки в коде . 
//
// Возвращаемое значение:
//   Структура   - Наименование настройки и ее значение. Получим все настройки подсистемы. 
//
Функция ПолучитьНастройки(ГруппаНастроекПВХ = Неопределено) Экспорт 
	Настройки = новый Структура;
	                 
	СтрокаСоединения = ВРег(СтрокаСоединенияИнформационнойБазы());
	
	ЭтоРабочаяБаза = (Найти(СтрокаСоединения,"654ыфва654фыва654фыва654фыва654")>0);//todo Указать правильное значение

	Если ГруппаНастроекПВХ = Неопределено Тогда
		Если ЭтоРабочаяБаза Тогда
			// доступ с серверу FF
			Настройки = ПолучитьНастройкиГруппы("elis");
		иначе
			// тестовая база
			Настройки = ПолучитьНастройкиГруппы("20line");
		КонецЕсли;
	Иначе 
		
		Настройки = ПолучитьНастройкиГруппы(ГруппаНастроекПВХ.Наименование);
		
	КонецЕсли;
	

	Настройки.Вставить("ЭтоРабочаяБаза",ЭтоРабочаяБаза);

	Возврат Настройки;
КонецФункции // ()


