

Процедура ДобавитьНастройку(Имя, ИмяРодителя, ЗначениеНастройки , ТипЗначения = Неопределено, ТаблицаИнициализации)

	Новая = ТаблицаИнициализации.Добавить();
	Новая.Имя 			= Имя;
	Новая.ИмяРодителя 	= ИмяРодителя;
	Новая.ЭтоГруппа 	= ложь;
	Новая.Значение 	= ЗначениеНастройки;
	
	Если ТипЗначения = Неопределено Тогда
		// автоопределение типа
		
		ТекущийТип = ТипЗнч(ЗначениеНастройки);
		МассивТипов = новый Массив;
		МассивТипов.Добавить(ТекущийТип);
		
		Новая.ТипЗначения 	= новый ОписаниеТипов(МассивТипов);
	иначе
		Новая.ТипЗначения 	= ТипЗначения;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьГруппуНастроек(Имя, ТаблицаИнициализации)

	Новая = ТаблицаИнициализации.Добавить();
	Новая.Имя 			= Имя;
	Новая.ЭтоГруппа 	= Истина;

КонецПроцедуры


// Инициализация настроек из кода 
// Добавляетт и инициализирует начальными занчениями настройки 
// Это происходит при смене версии инициализации настроек.
//
// Возвращаемое значение:
//   Булево   - инициализация прошла без ошибок
//
Функция ИнициализацияОбщихНастроек() Экспорт
	
	// При добавлении новой настройки версию надо увеличить на 1
	ТекущаяВерсия  = 6;
	
	// проверяем надо ли инициировать настройки
	Если Константы.ксп_ТекущаяВерсияНастроекФФ.Получить() >= ТекущаяВерсия Тогда
		Возврат истина;
	КонецЕсли;

	// таблица значений нужня для того что бы ее передать в превелигированный модуль для установки 
	// значений настроек , так как инициалицация может быть под пользователем без 
	// полных прав
	ТаблицаИнициализации = новый ТаблицаЗначений;
	ТаблицаИнициализации.Колонки.Добавить("Имя",новый ОписаниеТипов("Строка",,,,новый КвалификаторыСтроки(50,ДопустимаяДлина.Переменная)));
	ТаблицаИнициализации.Колонки.Добавить("ИмяРодителя",новый ОписаниеТипов("Строка",,,,новый КвалификаторыСтроки(50,ДопустимаяДлина.Переменная)));
	ТаблицаИнициализации.Колонки.Добавить("ЭтоГруппа", новый ОписаниеТипов("Булево"));
	ТаблицаИнициализации.Колонки.Добавить("ТипЗначения");
	// надо добавить типы ПВХ
	ТаблицаИнициализации.Колонки.Добавить("Значение", 	Метаданные.ПланыВидовХарактеристик.КСП_НастройкиФулфилмент.Тип);
	
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Инициализация настроек ФУЛФИЛМЕНТ - для рабочей базы 
	
	// группа настроек
	ИмяГруппы = "Фулфилмент";
	ДобавитьГруппуНастроек(ИмяГруппы, ТаблицаИнициализации);
	
	// настройки
	ДобавитьНастройку("HostName",					ИмяГруппы, "sftp.profashionsolutions.ru",, 								ТаблицаИнициализации);
	ДобавитьНастройку("UserName",					ИмяГруппы, "usr-elis",, 												ТаблицаИнициализации);
	ДобавитьНастройку("Password",					ИмяГруппы, "Yh(L_ma@XnD03",, 											ТаблицаИнициализации);
	ДобавитьНастройку("PortNumber",					ИмяГруппы, 2222,, 														ТаблицаИнициализации);
	ДобавитьНастройку("SshHostKeyFingerprint", 		ИмяГруппы, "ssh-rsa 2048 4kUGSMuRNk1rRnHvCxZQfodZOhuGZ83zeKJIcPy8JxM",,	ТаблицаИнициализации);
	ДобавитьНастройку("КаталогЛогированияОбмена",	ИмяГруппы, "\\Elis.Local\elis\1cedistr\Obmen\Фулфилмент\",,				ТаблицаИнициализации);
	ДобавитьНастройку("Shop",						ИмяГруппы, 5701,, 														ТаблицаИнициализации);
	ДобавитьНастройку("Token",						ИмяГруппы, "gdhdj336adifbs11vcvvrm",, 									ТаблицаИнициализации);
	
	// Курмак А.В. ++ 29.05.2023 г.
	ДобавитьНастройку("Организация",				ИмяГруппы, Справочники.Организации.НайтиПоНаименованию("Элис"),, 				ТаблицаИнициализации);
	ДобавитьНастройку("Контрагент",					ИмяГруппы, Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", "7743389870"),, ТаблицаИнициализации);
	// Курмак А.В. --
	
	ДобавитьНастройку("ВнешнийКаталогВыгрузки",						ИмяГруппы, "/incoming/pending/",, 		ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогУспешнойОбработкиВыгрузки",	ИмяГруппы, "/incoming/processed/",, 	ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогОшибочнойОбработкиВыгрузки",	ИмяГруппы, "/incoming/errors/",, 		ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогЗагрузки",						ИмяГруппы, "/outgoing/pending/",, 		ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогУспешнойОбработкиЗагрузки",	ИмяГруппы, "/outgoing/processed/1s/",, 	ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогОшибочнойОбработкиЗагрузки",	ИмяГруппы, "/outgoing/errors/1s/",, 	ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогЗагрузкиRetCRM",				ИмяГруппы, "/outgoing/pending/1s/",, 	ТаблицаИнициализации);
	
	//Поликарпов А.А. 02.06.23
	ДобавитьНастройку("Грузополучатель",			ИмяГруппы, Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", "7743867614"),, ТаблицаИнициализации);
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Инициализация настроек ФУЛФИЛМЕНТ - для тестовой базы 
	
	// группа настроек
	ИмяГруппы = "ФулфилментТестовыйСервер";
	ДобавитьГруппуНастроек(ИмяГруппы, ТаблицаИнициализации);
	
	// настройки
	ДобавитьНастройку("HostName",					ИмяГруппы, "sftp.dev.profashionsolutions.ru",, 							ТаблицаИнициализации);
	ДобавитьНастройку("UserName",					ИмяГруппы, "usr-elis",, 												ТаблицаИнициализации);
	ДобавитьНастройку("Password",					ИмяГруппы, "Yh(L_ma@XnD03",, 											ТаблицаИнициализации);
	ДобавитьНастройку("PortNumber",					ИмяГруппы, 2222,, 														ТаблицаИнициализации);
	ДобавитьНастройку("SshHostKeyFingerprint", 		ИмяГруппы, "ssh-rsa 2048 4kUGSMuRNk1rRnHvCxZQfodZOhuGZ83zeKJIcPy8JxM",, ТаблицаИнициализации);
	ДобавитьНастройку("КаталогЛогированияОбмена",	ИмяГруппы, "\\Elis.Local\elis\1cedistr\Obmen\ДляТеста\Фулфилмент\",, 	ТаблицаИнициализации);
	ДобавитьНастройку("Shop",						ИмяГруппы, 5701,, 														ТаблицаИнициализации);
	ДобавитьНастройку("Token",						ИмяГруппы, "gdhdj336adifbs11vcvvrm",, 									ТаблицаИнициализации);
	
	// Курмак А.В. ++ 29.05.2023 г.
	ДобавитьНастройку("Организация",				ИмяГруппы, Справочники.Организации.НайтиПоНаименованию("Элис"),, 				ТаблицаИнициализации);
	ДобавитьНастройку("Контрагент",					ИмяГруппы, Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", "7743389870"),, ТаблицаИнициализации);
	// Курмак А.В. --
	
	ДобавитьНастройку("ВнешнийКаталогВыгрузки",						ИмяГруппы, "/incoming/pending/",, 	ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогУспешнойОбработкиВыгрузки",	ИмяГруппы, "/incoming/processed/",, ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогОшибочнойОбработкиВыгрузки",	ИмяГруппы, "/incoming/errors/",, 	ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогЗагрузки",						ИмяГруппы, "/outgoing/pending/",, 	ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогУспешнойОбработкиЗагрузки",	ИмяГруппы, "/outgoing/processed/",, ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогОшибочнойОбработкиЗагрузки",	ИмяГруппы, "/outgoing/errors/",, 	ТаблицаИнициализации);
	ДобавитьНастройку("ВнешнийКаталогЗагрузкиRetCRM",				ИмяГруппы, "/outgoing/pending/",, 	ТаблицаИнициализации);
	
	//Поликарпов А.А. 02.06.23
	ДобавитьНастройку("Грузополучатель",			ИмяГруппы, Справочники.Контрагенты.НайтиПоРеквизиту("ИНН", "7743867614"),, ТаблицаИнициализации);

	
	ОписаниеОшибки = "";
	Если не ИнициализацияНастроекНаОсновеТаблицы(ТаблицаИнициализации, ОписаниеОшибки) Тогда
		Сообщение = СтрШаблон("Ошибка инициализации настроек. Причина: %1",ОписаниеОшибки);
		Сообщить(Сообщение,СтатусСообщения.Важное);
		Возврат ложь;
	КонецЕсли;
	
	Константы.ксп_ТекущаяВерсияНастроекФФ.Установить(ТекущаяВерсия);	
	Возврат истина;
КонецФункции // ()

// Получаем следующий код планов видов характеристик общих настроек 
// Проблема в том, что если есть пердопределенные элементы, то 
// автонумерация не учитывает их номер 
Функция ПолучитьСледующийСвободныйНомерОбщихНастроек()

	МаксимальныйНомер = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОбщиеНастройки.Код КАК Код
		|ИЗ
		|	ПланВидовХарактеристик.КСП_НастройкиФулфилмент КАК ОбщиеНастройки
		|
		|УПОРЯДОЧИТЬ ПО
		|	Код УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() тогда
		Код = ВыборкаДетальныеЗаписи.Код;
		МаксимальныйНомер = число(Код);
	КонецЕсли;
	
	МаксимальныйНомер = МаксимальныйНомер +1;
	
	Возврат Формат(МаксимальныйНомер, "ЧЦ=5; ЧН=; ЧВН=; ЧГ=0");
КонецФункции // ()


// 
Функция ИнициализацияНастроекНаОсновеТаблицы(ТаблицаИнициализации, ОписаниеОшибки)

	БезОшибок = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбщиеНастройки.Ссылка,
		|	ОбщиеНастройки.Наименование КАК Имя,
		|	ОбщиеНастройки.Родитель.Наименование КАК ИмяРодителя
		|ИЗ
		|	ПланВидовХарактеристик.КСП_НастройкиФулфилмент КАК ОбщиеНастройки";
	
	НайденыеНастройки = Запрос.Выполнить().Выгрузить();
	ХэшПоиска = новый Соответствие;
	Для каждого СтрНастройка Из НайденыеНастройки Цикл
		КлючПоиска = СтрШаблон("%1_%2",СтрНастройка.ИмяРодителя, СтрНастройка.Имя);
		ХэшПоиска.Вставить(КлючПоиска,СтрНастройка.Ссылка);
	КонецЦикла;
	
	// порядок следования важен , сначало группы , потом 
	МаксИнд = ТаблицаИнициализации.Количество()-1;
	
	Для Инд = 0 По МаксИнд Цикл
		
		СтрНастройка = ТаблицаИнициализации[Инд];
		КлючПоиска = СтрШаблон("%1_%2",СтрНастройка.ИмяРодителя, СтрНастройка.Имя);
		НайденаяНастройка =  ХэшПоиска.Получить(КлючПоиска);
		
		// Если настройка найдена не проводим инициализацию  
		Если НайденаяНастройка = Неопределено Тогда
			
			Если СтрНастройка.ЭтоГруппа Тогда
				НоваяНастройка = ПланыВидовХарактеристик.КСП_НастройкиФулфилмент.СоздатьГруппу();
			иначе
				НоваяНастройка = ПланыВидовХарактеристик.КСП_НастройкиФулфилмент.СоздатьЭлемент();
				
				НоваяНастройка.ТипЗначения =  СтрНастройка.ТипЗначения;
				
				КлючПоискаРодителя = СтрШаблон("_%1",СтрНастройка.ИмяРодителя);
				НайденаяНастройка =  ХэшПоиска.Получить(КлючПоискаРодителя);
				
				Если НайденаяНастройка = Неопределено Тогда
					// не найден родитель , это плохо 	
					ОписаниеОшибки = СтрШаблон("%1%2Не найден родитель [%3] настройки [%4]. Пропускаем запись настройки",
												ОписаниеОшибки,
												?(ПустаяСтрока(ОписаниеОшибки),"",Символы.ПС),
												СтрНастройка.ИмяРодителя,
												СтрНастройка.Имя);
					БезОшибок = ложь;
					Продолжить;
				КонецЕсли;
				НоваяНастройка.Родитель = НайденаяНастройка; // ссылка на найденого родителя
			КонецЕсли;
			
			НоваяНастройка.Наименование = СтрНастройка.Имя;
			
			НоваяНастройка.Код = ПолучитьСледующийСвободныйНомерОбщихНастроек();
			
			Попытка
			    НоваяНастройка.Записать();
			Исключение
				ОписаниеОшибки = СтрШаблон("%1%2Ошибка при записи настройки [%3%4] Причина:%5",
									ОписаниеОшибки,
									?(ПустаяСтрока(ОписаниеОшибки),"",Символы.ПС),
									?(СтрНастройка.ЭтоГруппа,"Группа: ",СтрНастройка.ИмяРодителя+"."),
									СтрНастройка.Имя,
									ОписаниеОшибки());
				БезОшибок = ложь;
				Продолжить;
			КонецПопытки;
			
			// Записываем значение для элемента
			Если не СтрНастройка.ЭтоГруппа Тогда
				МенЗап = РегистрыСведений.ксп_ЗначенияНастроекФулфилмент.СоздатьМенеджерЗаписи();
			    МенЗап.Настройка 	= НоваяНастройка.Ссылка;
				МенЗап.Значение 	= СтрНастройка.Значение;
				Попытка
					МенЗап.Записать();
				Исключение
					ОписаниеОшибки = СтрШаблон("%1%2Ошибка при записи значения настройки [%3.%4] Причина:%5",
					ОписаниеОшибки,
					?(ПустаяСтрока(ОписаниеОшибки),"",Символы.ПС),
					СтрНастройка.ИмяРодителя,
					СтрНастройка.Имя,
					ОписаниеОшибки());
					БезОшибок = ложь;
					Продолжить;
				КонецПопытки;
			иначе
			КонецЕсли;
			// добавим в хэш информацию об настройке 
			ХэшПоиска.Вставить(КлючПоиска,НоваяНастройка.Ссылка);

		КонецЕсли;
	КонецЦикла;
	
	Возврат БезОшибок;
КонецФункции // ()


// Получение одной настройки
Функция ПолучитьНастройку(ИмяРодителя,ИмяНастройки) Экспорт
	
	ЗначениеНастройки = Неопределено;
	
	Если не ИнициализацияОбщихНастроек() Тогда
		Возврат ЗначениеНастройки;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбщиеНастройки.Ссылка
		|ПОМЕСТИТЬ ВтНастройка
		|ИЗ
		|	ПланВидовХарактеристик.КСП_НастройкиФулфилмент КАК ОбщиеНастройки
		|ГДЕ
		|	ОбщиеНастройки.Наименование = &Имя
		|	И ОбщиеНастройки.Родитель.Наименование = &ИмяРодителя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗначениеОбщихНастроек.Значение
		|ИЗ
		|	ВтНастройка КАК ВтНастройка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ксп_ЗначенияНастроекФулфилмент КАК ЗначениеОбщихНастроек
		|		ПО ВтНастройка.Ссылка = ЗначениеОбщихНастроек.Настройка";
	
	Запрос.УстановитьПараметр("Имя", ИмяНастройки);
	Запрос.УстановитьПараметр("ИмяРодителя", ИмяРодителя);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗначениеНастройки = ВыборкаДетальныеЗаписи.Значение;
	КонецЦикла;
	
	Возврат ЗначениеНастройки;
КонецФункции // ()

// Получение писка настроек группы в виде структуры 
Функция ПолучитьНастройкиГруппы( ИмяГруппы ) Экспорт
	
	СтруктураНастроек = новый Структура;	
	
	Если не ИнициализацияОбщихНастроек() Тогда
		Возврат СтруктураНастроек;
	КонецЕсли;

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбщиеНастройки.Ссылка,
		|	ОбщиеНастройки.Наименование КАК Имя
		|ПОМЕСТИТЬ ВтНастройка
		|ИЗ
		|	ПланВидовХарактеристик.КСП_НастройкиФулфилмент КАК ОбщиеНастройки
		|ГДЕ
		|	ОбщиеНастройки.Родитель.Наименование = &ИмяРодителя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтНастройка.Имя,
		|	ЗначениеОбщихНастроек.Значение
		|ИЗ
		|	ВтНастройка КАК ВтНастройка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ксп_ЗначенияНастроекФулфилмент КАК ЗначениеОбщихНастроек
		|		ПО ВтНастройка.Ссылка = ЗначениеОбщихНастроек.Настройка";
	
	Запрос.УстановитьПараметр("ИмяРодителя", ИмяГруппы);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтруктураНастроек.Вставить(ВыборкаДетальныеЗаписи.Имя, ВыборкаДетальныеЗаписи.Значение);
	КонецЦикла;
	
	Возврат СтруктураНастроек;
КонецФункции // ()



