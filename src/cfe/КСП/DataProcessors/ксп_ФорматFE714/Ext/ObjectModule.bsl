// Выгрузка номенклатуры по Перемещению (ЕРП)
// Формирование XML файла по формату FE714 на основании документа продажи.
//
// Параметры:
//  СсылкаПродажа  		- СсылкаДокументы.Продажа
//  ПутьКФайлуВыгрузки  - Строка - путь к файлу выгрузки 
//	Лог					- Структура - структура для логирования хода выгрузки 
//
// Возвращаемое значение:
//   булево   - истина если удалось сделать выгрузку , иначе ложь. Описание ошибки в логе.
Функция ФормированиеФайлаXMLПоФормату_FE714(СсылкаПродажа, ПутьКФайлуВыгрузки, Лог) Экспорт
	
	Если не ЗначениеЗаполнено(СсылкаПродажа) Тогда
		ксп_Элис_ОбщегоНазначения.ЗаписатьВЛог(Лог, "Файл выгрузки не сформирован. Пустая ссылка на документ продажи" , "ERR");
		Возврат ложь;
	КонецЕсли;
	
	НастройкиФФ = ОбменСФулфилментСервер.ПолучитьНастройкиФулфилментДляТекущейБазы();

	//ЕНС. замена
	//СсылкаТипЦенНоменклатуры = Шапка.ТипЦенОрганизации;	//  Справочники.ТипыЦенНоменклатуры.ЭталонЦенаПроизводителя; //Прайс Цена производителя   // Дородных попросил 07.03.2023 15:40 : телега
	// на это
	СсылкаТипЦенНоменклатуры = НастройкиФФ.ТипЦенАнонсаПоставки;
	
	
	// собираем данные для выгрузки из БД в табилцы 
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДляВыгрузкиНоменклатурыПоФормату_FE714();
	Запрос.Параметры.Вставить("Ссылка"	, СсылкаПродажа);
	Запрос.Параметры.Вставить("ДатаДок"	, ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаПродажа,"Дата"));
	Запрос.Параметры.Вставить("ТипЦенАнонсаПоставки"	, НастройкиФФ.ТипЦенАнонсаПоставки);//ЕНС
	МассивПакетов = Запрос.ВыполнитьПакет();
	
	СмещениеИндекс = 9;
	
	#Область ПоляШапкиДокументаПродажи
	//Дата
	//Номер
	//СсылкаПродажа
	#КонецОбласти
	ТабШапка 		= МассивПакетов[СмещениеИндекс + 0].Выгрузить();	// реквизиты шапки документа "Продажа"
	Шапка 			= ТабШапка[0]; 										// по одному документу одна строка 
	
	#Область ПоляТаблицыНоменклатуры
	//Артикул
	//Вес
	//ВидУпаковки
	//ДополнительноеОписание
	//Наименование
	//Номенклатура
	//КодТНВЭД
	//ПолноеНаименование
	//Сезон
	//СоставСайт
	//ТорговаяМарка
	//ЦветСайт
	//СтавкаНДС
	#КонецОбласти
	ТабНоменклатуры	= МассивПакетов[СмещениеИндекс + 1].Выгрузить();	// номекклатура документа "Продажа"
	
	#Область ПоляТаблицыРазмеров
	//ВидНоменклатуры
	//Номенклатура
	//РусскийРазмер
	//ХарактеристикаНоменклатуры
	#КонецОбласти
	ТабРазмеры		= МассивПакетов[СмещениеИндекс + 2].Выгрузить();	// размеры номенклатуры документа "Продажа"
	
	#Область ПоляТаблицыШтрихкодовEAN13
	//Номенклатура
	//ХарактеристикаНоменклатуры
	//Штрихкод
	#КонецОбласти
	ТабШтрихкоды	= МассивПакетов[СмещениеИндекс + 3].Выгрузить();	// штрихкоды номенклатуры документа "Продажа"
	
	#Область ПоляТаблицыЦен
	//Номенклатура
	//ТипЦен
	//Цена
	#КонецОбласти
	ТабЦены			= МассивПакетов[СмещениеИндекс + 4].Выгрузить();	// цены номенклатуры документа "Продажа"
	
	
	
	// Вспомогательная структура для рекурсивного заполения , в ней хранятся узлы XDTO и константы значения для заполнения
	Параметры = новый Структура;
	
	Параметры.Вставить("ПространствоИмен","http://service.profashionsolutions.ru/fe714_r002"); // http://service.profashionsolutions.ru/fe714_r002
	
	// константы  UUID
	Параметры.Вставить("UUID_ТипТовара",			"efc7a940-1c50-4e9d-a02d-376c844c3c67");  
	Параметры.Вставить("UUID_ПолеВывеска",			"af06737a-94a6-473e-bd57-1cc66378d317"); // булево - по типу ВидУпаковки 
	Параметры.Вставить("UUID_ПолеСезон",			"c0ee2f86-a6e0-4b0a-8791-1d37bd665663"); // булево - по типу ВидУпаковки     
	Параметры.Вставить("UUID_ПолеТорговаяМарка",	"85fe09d6-d9c6-4bc8-a947-e1d8893c7d08"); // булево - по типу ВидУпаковки 
	
	Параметры.Вставить("UUID_ТипЦен",			строка(СсылкаТипЦенНоменклатуры.УникальныйИдентификатор()));   
	//ЕНС. отключено
	//СсылкаВидУпаковкиНаВешалке = Справочники.ВидыУпаковки.НайтиПоКоду("000000001");  //На вешалке
	
	                                                          
	
	// берем коренвое свойство 
	Имя_productMasterDataRequest = "productMasterDataRequest";
	Объект_productMasterDataRequest = ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, Имя_productMasterDataRequest);
	
	// сформировали пустой скелет что бы не делать этого руками 
	ОбменСФулфилментСервер.ЗаполнитьПустымиСвойствамиОбъектРекурсивно(Параметры, Объект_productMasterDataRequest);
	
	
	
	#Область СоздениеТипаТовара 
	
	//Добавим тип товара, он у нас однин
	typeItems = ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctTypeItems");
	typeItems.id 			= Параметры.UUID_ТипТовара;
	typeItems.name			= "Основной тип товара";
	typeItems.addFieldsSize	= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctAddFieldsSize");;
	
		// Создаем список полей 
		addFieldsItem = ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctAddFieldsItem");
			// Добавляем дополнительное свойство навеска к нашему типу 
			//<field id="101" type="boolean" multiple="false"><name>Вид упаковки</name></field>
			FieldsItem 		= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctAddField");
			FieldsItem.id 		= Параметры.UUID_ПолеВывеска;
			FieldsItem.type		= "boolean";
			FieldsItem.multiple = "false";
			FieldsItem.name 	= "Навеска";
			// добавляем строку в список				  
			addFieldsItem.field.Добавить(FieldsItem);
			
			//	Добавляем доп поле "Сезон"
			FieldsItem 		= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctAddField");
			FieldsItem.id 		= Параметры.UUID_ПолеСезон;
			FieldsItem.type		= "string";
			FieldsItem.multiple = "false";
			FieldsItem.name 	= "Сезон";
			// добавляем строку в список				  
			addFieldsItem.field.Добавить(FieldsItem);
			
			FieldsItem 		= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctAddField");
			FieldsItem.id 		= Параметры.UUID_ПолеТорговаяМарка;
			FieldsItem.type		= "string";
			FieldsItem.multiple = "false";
			FieldsItem.name 	= "Торговая марка";
			// добавляем строку в список				  
			addFieldsItem.field.Добавить(FieldsItem);
			
		typeItems.addFieldsItem = addFieldsItem;
	Параметры.typesItems.typeItems.Добавить(typeItems);
	
	#КонецОбласти 
	
	#Область СоздениеТипаЦен 
	
	// Заполним тип цен 
	// создаем один тип цен 
	Price = ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctPrice");
	
	Price.id		= Параметры.UUID_ТипЦен; 
	//ЕНС. Замена
	//Price.name		= Шапка.НаименованиеТипаЦен; 
	Price.name		= Строка(НастройкиФФ.ТипЦенАнонсаПоставки);
	Price.currency	= "RUB";//валюта типа цен
	
	// добавляем цену в список цен
	Параметры.prices.price.Добавить(Price);
	
	#КонецОбласти 
	
	#Область ЗаполнениеУзлаitems
	//Артикул
	//Вес
	//ВидУпаковки
	//ДополнительноеОписание
	//Наименование
	//Номенклатура
	//КодТНВЭД
	//ПолноеНаименование
	//Сезон
	//СоставСайт
	//ТорговаяМарка
	//ЦветСайт
	//СтавкаНДС

	
	
	Для каждого СтрНоменклатура Из ТабНоменклатуры Цикл
		
		item = ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctItemRequest");
	
		item.typeItemId 	= Параметры.UUID_ТипТовара;
		item.uuid			= Строка(СтрНоменклатура.Номенклатура.УникальныйИдентификатор());
		item.article		= СокрЛП(СтрНоменклатура.Артикул);
		item.name			= СокрЛП(ОбменСФулфилментСервер.СЖПРОБЕЛЫ( СтрНоменклатура.ПолноеНаименование));
		item.fullDescr		= СокрЛП(СтрНоменклатура.ДополнительноеОписание);
		item.materialDescr	= СокрЛП(СтрНоменклатура.СоставСайт);
		item.vatCode		= ОбменСФулфилментСервер.ПолучитьСтавкуНДСФасета_stVatCode(СтрНоменклатура.СтавкаНДС);
		item.color			= СокрЛП(СтрНоменклатура.ЦветСайт);
		
		packingUnit 		= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctPackingUnit");
		packingUnit.length	= 0;
		packingUnit.width	= 0;
		packingUnit.volume	= 0;
		packingUnit.weight	= СтрНоменклатура.Вес;
		item.packingUnit  	= packingUnit;
		
		
		sizesInfo			= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctSizesInfo");
		
		//ВидНоменклатуры
		//Номенклатура
		//РусскийРазмер
		//ХарактеристикаНоменклатуры

		НайденыеРазмеры = ТабРазмеры.НайтиСтроки(
			новый Структура("Номенклатура",СтрНоменклатура.Номенклатура));
		
		Для каждого СтрРазмер Из НайденыеРазмеры Цикл
			
			// РАЗМЕРЫ
			sizeInfo			= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctSizeInfo");
			
			sizeInfo.size		= Строка(СтрРазмер.ХарактеристикаНоменклатуры.УникальныйИдентификатор());;
			
			//ЕНС. отключено
			//Если СтрРазмер.ВидНоменклатуры = ПредопределенноеЗначение("Справочник.ВидыНоменклатуры.Одежда") Тогда
			//	sizeInfo.sizeText	= СтрШаблон("%1, р. %2",СокрЛП(СтрРазмер.ХарактеристикаНоменклатуры), СтрРазмер.РусскийРазмер);	
			//Иначе
				sizeInfo.sizeText	= СокрЛП(СтрРазмер.ХарактеристикаНоменклатуры);	
			//КонецЕсли;
			
			
			// ШТРИХ КОД
			НайденыеШтрихкоды =  ТабШтрихкоды.НайтиСтроки(Новый Структура("ХарактеристикаНоменклатуры",СтрРазмер.ХарактеристикаНоменклатуры));
			Если НайденыеШтрихкоды.количество() = 0 Тогда
				НайденыеШтрихкоды.Добавить(новый Структура("Штрихкод",""));
			КонецЕсли;
			
			Для каждого СтрШтрихкод Из НайденыеШтрихкоды Цикл
				sizeInfo.ean.Добавить(СтрШтрихкод.Штрихкод); 							
			КонецЦикла;

			// ЦЕНЫ 
			prices					= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctPricesItemSize");
			
			price 					= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctPriceItemSize");
			
			//выгружаем один тип цен, одну цену 
			price.id				= Параметры.UUID_ТипЦен;				
			
			НайденыеЦены =  ТабЦены.НайтиСтроки(Новый Структура("Номенклатура",СтрНоменклатура.Номенклатура));
			Если НайденыеШтрихкоды.количество() = 0 Тогда
				price.__content			=	0;
			иначе
				
				Если НайденыеЦены.Количество() > 0 Тогда
					price.__content			=	НайденыеЦены[0].Цена;
				Иначе 
					price.__content			=	0;
				КонецЕсли;
				
			КонецЕсли;

			prices.price.Добавить(price);
			sizeInfo.prices = prices;
			
			// запись элемента в колекцию 
			sizesInfo.sizeInfo.Добавить(sizeInfo);

			
		КонецЦикла;
		
		// добавляем размеры в номенклатуру
		item.sizesInfo 				= sizesInfo;

		// добавляем дополнительные свойства 
		                                                                
		FieldValues				= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctAddFieldValues");
		
		field					= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctAddFieldValue");
		field.id				= Параметры.UUID_ПолеВывеска;
		//ЕНС
		//field.__content         = (СтрНоменклатура.ВидУпаковки = СсылкаВидУпаковкиНаВешалке);
		field.__content         = СтрНоменклатура.НаВешалке;
		FieldValues.field.Добавить(field);
		
		field					= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctAddFieldValue");
		field.id				= Параметры.UUID_ПолеСезон;
		field.__content         = СокрЛП(СтрНоменклатура.Сезон);
		FieldValues.field.Добавить(field);
		
		field					= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctAddFieldValue");
		field.id				= Параметры.UUID_ПолеТорговаяМарка;
		field.__content         = СокрЛП(СтрНоменклатура.ТорговаяМарка);
		FieldValues.field.Добавить(field);
		
		item.addFieldValues = FieldValues;

		
		stateCodes 		= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctStateCodes");
		
		stateCodes.tnved	= СокрЛП(СтрНоменклатура.КодТНВЭД);
		stateCodes.okpd2	= "";
		
		item.stateCodes  	= stateCodes;
		
		// добавляем номенклатуру в список
		Параметры.items.item.Добавить(item);
	КонецЦикла; 
	
	
	#КонецОбласти 
	
	
	Попытка
		МойXML = Новый ЗаписьXML;
		МойXML.ОткрытьФайл(ПутьКФайлуВыгрузки, "UTF-8");
		МойXML.ЗаписатьОбъявлениеXML();
		
		ФабрикаXDTO.ЗаписатьXML(МойXML, Объект_productMasterDataRequest, Имя_productMasterDataRequest);  
		
		МойXML.Закрыть();
		
	Исключение
		Сообщение  = СтрШаблон("Ошибка записи выгрузки номенклатуры XML. Причина: %1", ОписаниеОшибки());
		ксп_Элис_ОбщегоНазначения.ЗаписатьВЛог(Лог, Сообщение, "ERR");
		Возврат ложь;		
	КонецПопытки;
	
	Сообщение  = СтрШаблон("Сформировали файл выгрузки номенклатуры. Количество элементов номенклатуры %1 шт.", ТабНоменклатуры.Количество());
	ксп_Элис_ОбщегоНазначения.ЗаписатьВЛог(Лог, Сообщение);
	
	возврат истина;
КонецФункции // ()

// Выгрузка номенклатуры по Перемещению (ЕРП)
Функция ПолучитьТекстЗапросаДляВыгрузкиНоменклатурыПоФормату_FE714()

	 ТекстЗапроса = 
	 
	 // 1. готов
	 
	 "ВЫБРАТЬ
|	Продажа.Ссылка КАК СсылкаПродажа,
|	Продажа.Номер,
|	Продажа.Дата
|ПОМЕСТИТЬ ВтШапка
|ИЗ
|	Документ.ПеремещениеТоваров КАК Продажа
|ГДЕ
|	Продажа.Ссылка = &Ссылка
|;
					
	                |
	                |////////////////////////////////////////////////////////////////////////////////
					
	// 2. готов					
					
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ПродажаТоварыОрганизации.Номенклатура КАК Номенклатура,
|	ПродажаТоварыОрганизации.Характеристика  КАК ХарактеристикаНоменклатуры,
|	ПродажаТоварыОрганизации.Номенклатура.СтавкаНДС КАК СтавкаНДС
|ПОМЕСТИТЬ ВтНоменклатураХарактеристики
|ИЗ
|	Документ.ПеремещениеТоваров.Товары КАК ПродажаТоварыОрганизации
|ГДЕ
|	ПродажаТоварыОрганизации.Ссылка = &Ссылка
|;
	                |
	                |////////////////////////////////////////////////////////////////////////////////

	// 3. готов					
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ВтНоменклатураХарактеристики.Номенклатура,
	                |	ВтНоменклатураХарактеристики.СтавкаНДС
	                |ПОМЕСТИТЬ ВтНоменклатура
	                |ИЗ
	                |	ВтНоменклатураХарактеристики КАК ВтНоменклатураХарактеристики
	                |;

					|
	                |////////////////////////////////////////////////////////////////////////////////

	// 4. пока убираем
					//|ВЫБРАТЬ
					//|	СвойстваОбъектов.Ссылка,
					//|	СвойстваОбъектов.Код,
					//|	СвойстваОбъектов.Наименование
					//|ПОМЕСТИТЬ ВтСписокСвойств
					//|ИЗ
					//|	ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
					//|ГДЕ
					//|	СвойстваОбъектов.Код В (""00044"", ""00046"")
					//|	И СвойстваОбъектов.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура)
					//|	И СвойстваОбъектов.Наименование <> ""ВидУпаковки""
					//|;
					
					|ВЫБРАТЬ
					|	Неопределено как Ссылка,
					|	Неопределено как Код,
					|	Неопределено как Наименование
					|ПОМЕСТИТЬ ВтСписокСвойств
					|;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
					
	// 5. готов. пока убираем получение свойств					
	                |ВЫБРАТЬ
	                |	ВтНоменклатура.Номенклатура,
	                |	НЕопределено КАК Свойство,
	                |	НЕопределено КАК Значение,
	                |	Неопределено КАК ЦветСайт,
	                |	Неопределено КАК СоставСайт
	                |ПОМЕСТИТЬ ВтСвойстваНоменклатурыБезГруппировки
	                |ИЗ
	                |		ВтНоменклатура КАК ВтНоменклатура
	                |;
					
					
	                |
	                |////////////////////////////////////////////////////////////////////////////////
					
	// 6. готов 
					|ВЫБРАТЬ
	                |	ВтСвойстваНоменклатурыБезГруппировки.Номенклатура,
	                |	МАКСИМУМ(ВтСвойстваНоменклатурыБезГруппировки.ЦветСайт) КАК ЦветСайт,
	                |	МАКСИМУМ(ВтСвойстваНоменклатурыБезГруппировки.СоставСайт) КАК СоставСайт
	                |ПОМЕСТИТЬ ВтСвойстваНоменклатурыГруппировка
	                |ИЗ
	                |	ВтСвойстваНоменклатурыБезГруппировки КАК ВтСвойстваНоменклатурыБезГруппировки
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВтСвойстваНоменклатурыБезГруппировки.Номенклатура
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
					
	// 7. замена. нужен тест
					//|ВЫБРАТЬ
					//|	ВтНоменклатура.Номенклатура,
					//|	ЕдиницыИзмерения.Наименование,
					//|	ЕдиницыИзмерения.Вес
					//|ПОМЕСТИТЬ ВтВеса
					//|ИЗ
					//|	ВтНоменклатура КАК ВтНоменклатура
					//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
					//|		ПО ВтНоменклатура.Номенклатура = ЕдиницыИзмерения.Владелец
					//|ГДЕ
					//|	ЕдиницыИзмерения.ЕдиницаПоКлассификатору = ЗНАЧЕНИЕ(Справочник.КлассификаторЕдиницИзмерения.шт)
					//|;
					
					|ВЫБРАТЬ
					|	ВтНоменклатура.Номенклатура,
					|	СпрНом.ЕдиницаИзмерения.Наименование КАК Наименование,
					|	Выбор Когда СпрНом.ВесИспользовать Тогда
					|		Выбор Когда СпрНом.ВесЗнаменатель <> 0 Тогда 
					|			СпрНом.ВесЧислитель  / СпрНом.ВесЗнаменатель // не знаю, надо ли делить 
					|		Иначе 
					|			0 
					|		Конец 
					|	Иначе 
					|		0 
					|	Конец КАК Вес
					|
					|ПОМЕСТИТЬ ВтВеса
					|ИЗ
					|	ВтНоменклатура КАК ВтНоменклатура
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНом
					|		ПО ВтНоменклатура.Номенклатура = СпрНом.Ссылка
					|;

		
	                |
	                |////////////////////////////////////////////////////////////////////////////////
					
	// 8. готов
					
					|ВЫБРАТЬ
	                |	ЦеныНоменклатурыСрезПоследних.ВидЦены КАК ТипЦен,
	                |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	                |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	                |ПОМЕСТИТЬ ВтЦеныНоменклатуры
	                |ИЗ
	                |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	                |			&ДатаДок,
	                |			видЦены = &ТипЦенАнонсаПоставки
	                |				И Номенклатура В
	                |					(ВЫБРАТЬ
	                |						ВтНоменклатура.Номенклатура
	                |					ИЗ
	                |						ВтНоменклатура КАК ВтНоменклатура)) КАК ЦеныНоменклатурыСрезПоследних
	                |;
					
					
					|
	                |////////////////////////////////////////////////////////////////////////////////
					
	// 9. готов. отключено условие, его нет в ЕРП
	
	                |ВЫБРАТЬ
	                |	ВтНоменклатураХарактеристики.Номенклатура,
	                |	ВтНоменклатураХарактеристики.ХарактеристикаНоменклатуры,
	                |	Штрихкоды.Штрихкод
	                |ПОМЕСТИТЬ ВтШтрихКод
	                |ИЗ
	                |	ВтНоменклатураХарактеристики КАК ВтНоменклатураХарактеристики
	                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	                |		ПО ВтНоменклатураХарактеристики.Номенклатура = Штрихкоды.Номенклатура
	                |			И ВтНоменклатураХарактеристики.ХарактеристикаНоменклатуры = Штрихкоды.Характеристика
	                //|			И (Штрихкоды.ТипШтрихкода = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыШтрихкодов.EAN13))
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
					
	// 10. 	ок. ТабШапка
	
					|ВЫБРАТЬ
	                |	ВтШапка.СсылкаПродажа,
	                |	ВтШапка.Номер,
	                |	ВтШапка.Дата
	                |ИЗ
	                |	ВтШапка КАК ВтШапка
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
					
	// 11. замены. ТабНоменклатуры
	
	                |ВЫБРАТЬ
	                |	ВтНоменклатура.Номенклатура,
	                //|	ВтНоменклатура.Номенклатура.Родитель.Наименование КАК Артикул,
					|	ВтНоменклатура.Номенклатура.Артикул КАК Артикул,
	                |	ВтНоменклатура.Номенклатура.Наименование КАК Наименование,
	                |	ВтНоменклатура.Номенклатура.НаименованиеПолное КАК ПолноеНаименование,
	                //|	ВтНоменклатура.Номенклатура.ДополнительноеОписаниеНоменклатуры КАК ДополнительноеОписание,
					|	""-"" КАК ДополнительноеОписание,
	                |	ЕСТЬNULL(ВтСвойстваНоменклатурыГруппировка.ЦветСайт, """") КАК ЦветСайт,
	                |	ЕСТЬNULL(ВтСвойстваНоменклатурыГруппировка.СоставСайт, """") КАК СоставСайт,
	                |	ЕСТЬNULL(ВтВеса.Вес, 0) КАК Вес,
	                //|	ВтНоменклатура.Номенклатура.ВидУпаковки КАК ВидУпаковки,
					//ЕНС вместо поля ВидУпаковки будет это (доделать, когда загрузят этот реквизит):
					|	ЛОЖЬ КАК НаВешалке,
	                //|	ВтНоменклатура.Номенклатура.ТорговаяМарка КАК ТорговаяМарка,
					|	""-"" КАК ТорговаяМарка,
	                //|	ВтНоменклатура.Номенклатура.Сезон КАК Сезон,
					|	""-"" КАК Сезон,
	                |	ВтНоменклатура.Номенклатура.КодТНВЭД КАК КодТНВЭД,
	                |	ВтНоменклатура.СтавкаНДС
	                |ИЗ
	                |	ВтНоменклатура КАК ВтНоменклатура
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВтСвойстваНоменклатурыГруппировка КАК ВтСвойстваНоменклатурыГруппировка
	                |		ПО ВтНоменклатура.Номенклатура = ВтСвойстваНоменклатурыГруппировка.Номенклатура
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВтВеса КАК ВтВеса
	                |		ПО ВтНоменклатура.Номенклатура = ВтВеса.Номенклатура
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
					
	// 12. ок      ТабРазмеры
	
					|ВЫБРАТЬ
	                |	ВтНоменклатураХарактеристики.Номенклатура,
	                |	ВтНоменклатураХарактеристики.ХарактеристикаНоменклатуры,
	                |	ВтНоменклатураХарактеристики.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	                //|	ВтНоменклатураХарактеристики.ХарактеристикаНоменклатуры.Размер.РусскийРазмер КАК РусскийРазмер
					|	"""" КАК РусскийРазмер
	                |ИЗ
	                |	ВтНоменклатураХарактеристики КАК ВтНоменклатураХарактеристики
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////

	// 13. ок       ТабШтрихкоды
	
					|ВЫБРАТЬ
	                |	ВтШтрихКод.Номенклатура,
	                |	ВтШтрихКод.ХарактеристикаНоменклатуры,
	                |	ВтШтрихКод.Штрихкод
	                |ИЗ
	                |	ВтШтрихКод КАК ВтШтрихКод
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
					
	// 14. ок		ТабЦены
	
	                |ВЫБРАТЬ
	                |	ВтЦеныНоменклатуры.ТипЦен,
	                |	ВтЦеныНоменклатуры.Номенклатура,
	                |	ВтЦеныНоменклатуры.Цена
	                |ИЗ
	                |	ВтЦеныНоменклатуры КАК ВтЦеныНоменклатуры";
	
	Возврат ТекстЗапроса;  
	
КонецФункции // ()

