
// Анонс поставки
// Формирование XML файла по формату FE714 на основании документа продажи.
//
// Параметры:
//  СсылкаОрдерНаПродажу  	- СсылкаДокументы.ЗаказНаПеремещение
//  ПутьКФайлуВыгрузки  	- Строка - путь к файлу выгрузки 
//	ОписаниеОшибки			- Описание ошибки , если она есть 
//
// Возвращаемое значение:
//   булево   - истина если удалось сделать выгрузку , иначе ложь и описание ошибки .
Функция ФормированиеФайлаXMLПоФормату_FE720(СсылкаОрдерНаПродажу, ПутьКФайлуВыгрузки, UUIDФайла, ДатаФормированияФайла,  Лог)  Экспорт
	
	Если не ЗначениеЗаполнено(СсылкаОрдерНаПродажу) Тогда
		ксп_Элис_ОбщегоНазначения.ЗаписатьВЛог(Лог,  "Файл выгрузки не сформирован. Пустая ссылка на документ ""Заказ на перемещение""", "ERR");
		Возврат ложь;
	КонецЕсли;
	
	// собираем данные для выгрузки из БД в табилцы 
	
	#Область ПоляЗапросаДляАнонсаПоставки
	//UUID		- Номенклатура
	//size		- ХарактеристикаНоменклатуры
	//ean			- "не передаем" 
	//quantity	- Количество
	//price		- Цена
	//labelCode	- ШтрихКод
	#КонецОбласти

	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДляВыгрузкиНоменклатурыПоФормату_FE720();
	Запрос.Параметры.Вставить("СсылкаОрдерНаПродажу"	, СсылкаОрдерНаПродажу);
	
	//Поликарпов А.А. 13.09.23 обр.0000060126
	//Запрос.Параметры.Вставить("ДатаДок"	, ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаОрдерНаПродажу,"Дата"));
	ДокПродажа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаОрдерНаПродажу,"ДокументПродажи"); 
	// ЕНС . В УПП это
	// - ВозвратПоставщику
	// - Перемещение
	// - Продажа
	// В ЕРП:
	// - ПеремещениеТоваров
	ДатаПродажи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокПродажа,"Дата");
	Если Не ЗначениеЗаполнено(ДатаПродажи) Тогда                                
		ксп_Элис_ОбщегоНазначения.ЗаписатьВЛог(Лог,  "Файл выгрузки не сформирован. Нет документа <Перемещение товаров> или в нем не заполнена дата (что невозможно, т.к. без даты он не запишется)", "ERR");
		Возврат ложь;
	КонецЕсли;
	Запрос.Параметры.Вставить("ДатаДок", ДатаПродажи); 
	
	МассивПакетов = Запрос.ВыполнитьПакет();

	СмещениеИндекс = 4;
	
	#Область FE720_ПоляНоменклатуры
	//Номенклатура                            
	//ХарактеристикаНоменклатуры
	//Количество
	//Цена
	//ОбязательнаяМТ                            
	#КонецОбласти
	ТабНоменклатура 		= МассивПакетов[СмещениеИндекс + 0].Выгрузить();	
	
	#Область FE720_ПоляШтрихкоды
	//ХарактеристикаНоменклатуры
	//ШтрихКод
	#КонецОбласти
	ТабШтрихкоды 		= МассивПакетов[СмещениеИндекс + 1].Выгрузить();	
	
	//FE720
	// Вспомогательная структура для рекурсивного заполения , в ней хранятся узлы XDTO и константы значения для заполнения
	Параметры = новый Структура;
	
	Параметры.Вставить("ПространствоИмен","http://service.profashionsolutions.ru/fe720_r002"); 
	
	// константы  
	НастройкиФФ = ОбменСФулфилментСервер.ПолучитьНастройкиФулфилментДляТекущейБазы();
	Параметры.Вставить("Shop", 	НастройкиФФ.Shop);  
	Параметры.Вставить("Token",	НастройкиФФ.Token); 
	
	// берем коренвое свойство 
	Имя_shipmentAnnouncementRequest = "shipmentAnnouncementRequest";
	Объект_shipmentAnnouncementRequest = ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, Имя_shipmentAnnouncementRequest);
	
	// сформировали пустой скелет что бы не делать этого руками 
	ОбменСФулфилментСервер.ЗаполнитьПустымиСвойствамиОбъектРекурсивно(Параметры, Объект_shipmentAnnouncementRequest);
	
	// заполняем параметры поставки 
	
	Параметры.service.shop 			=  Параметры.shop;
	Параметры.service.token 		=  Параметры.token;
	Параметры.service.messageId 	=  UUIDФайла;
	Параметры.service.messageDate 	=  ОбменСФулфилментСервер.ПолучитьДатуСтрокойФомата_XSD_duration(ДатаФормированияФайла); //"P2023Y03M11DT13H33M22S"; //ДатаФормированияФайла-'00010101';  //duration  xsd:duration
	
	Для каждого СтрНоменклатура Из ТабНоменклатура Цикл
		item = ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctItemRequest");
		
		item.uuid 		= строка(СтрНоменклатура.Номенклатура.УникальныйИдентификатор());
		item.size 		= строка(СтрНоменклатура.ХарактеристикаНоменклатуры.УникальныйИдентификатор());
		item.quantity   = СтрНоменклатура.Количество;
		item.price		= СтрНоменклатура.Цена;
		
		item.ean		= "";
		
		
		labelCodes		= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctlabelCodes");
		
		НайденыеШтрихкоды = ТабШтрихкоды.найтиСтроки(Новый Структура("ХарактеристикаНоменклатуры",СтрНоменклатура.ХарактеристикаНоменклатуры));
		Для каждого СтрШтрихкод Из НайденыеШтрихкоды Цикл
			
			DataMatrix = СтрШаблон("01%121%2",
				сред(СтрШтрихкод.ШтрихКод,1,14),
				сред(СтрШтрихкод.ШтрихКод,15));
			
			labelCodes.labelCode.Добавить(DataMatrix);
		КонецЦикла;
		
		item.labelCodes = labelCodes;
		
		Параметры.items.item.Добавить(item);
	КонецЦикла;

	
	
	Попытка
		МойXML = Новый ЗаписьXML;
		МойXML.ОткрытьФайл(ПутьКФайлуВыгрузки, "UTF-8");
		МойXML.ЗаписатьОбъявлениеXML();
		ФабрикаXDTO.ЗаписатьXML(МойXML, Объект_shipmentAnnouncementRequest, Имя_shipmentAnnouncementRequest);  
		МойXML.Закрыть();
	Исключение
		Сообщение  = СтрШаблон("Ошибка записи выгрузки анонса поставки XML. Причина: %1", ОписаниеОшибки());
		ксп_Элис_ОбщегоНазначения.ЗаписатьВЛог(Лог, Сообщение, "ERR");
		Возврат ложь;		
	КонецПопытки;
	
	Сообщение  = СтрШаблон("Сформировали файл выгрузки анонса поставки. Количество элементов номенклатуры %1 шт.", ТабНоменклатура.Количество());
	ксп_Элис_ОбщегоНазначения.ЗаписатьВЛог(Лог, Сообщение);


	возврат истина;
КонецФункции // ()

// Анонс поставки
Функция ПолучитьТекстЗапросаДляВыгрузкиНоменклатурыПоФормату_FE720()

	 ТекстЗапроса = "ВЫБРАТЬ
	                |	ОрдерНаПродажуТовары.Номенклатура,
	                |	ОрдерНаПродажуТовары.ХарактеристикаНоменклатуры,
	                |	СУММА(ОрдерНаПродажуТовары.Количество) КАК Количество,
	                |	ОрдерНаПродажуТовары.ШтрихКод
	                |ПОМЕСТИТЬ ВтТовары
	                |ИЗ
	                |	Документ.ОрдерНаПродажу.Товары КАК ОрдерНаПродажуТовары
	                |ГДЕ
	                |	ОрдерНаПродажуТовары.Ссылка = &СсылкаОрдерНаПродажу
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ОрдерНаПродажуТовары.ШтрихКод,
	                |	ОрдерНаПродажуТовары.ХарактеристикаНоменклатуры,
	                |	ОрдерНаПродажуТовары.Номенклатура
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ВтТовары.Номенклатура
	                |ПОМЕСТИТЬ ВтНоменклатура
	                |ИЗ
	                |	ВтТовары КАК ВтТовары
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ ПЕРВЫЕ 1
	                |	Продажа.ТипЦенОрганизации
	                |ПОМЕСТИТЬ ВтТипЦен
	                |ИЗ
	                |	Документ.Продажа КАК Продажа
	                |ГДЕ
	                |	Продажа.ОрдерНаПродажу = &СсылкаОрдерНаПродажу
	                |	И Продажа.Проведен
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Продажа.Дата УБЫВ
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	                |	ЦеныНоменклатурыСрезПоследних.Цена
	                |ПОМЕСТИТЬ ВтЦены
	                |ИЗ
	                |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	                |			&ДатаДок,
	                |			ТипЦен В
	                |					(ВЫБРАТЬ
	                |						ВтТипЦен.ТипЦенОрганизации
	                |					ИЗ
	                |						ВтТипЦен КАК ВтТипЦен)
	                |				И Номенклатура В
	                |					(ВЫБРАТЬ
	                |						ВтНоменклатура.Номенклатура
	                |					ИЗ
	                |						ВтНоменклатура КАК ВтНоменклатура)) КАК ЦеныНоменклатурыСрезПоследних
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВтТовары.Номенклатура КАК Номенклатура,
	                |	ВтТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	                |	СУММА(ВтТовары.Количество) КАК Количество,
	                |	ЕСТЬNULL(ВтЦены.Цена, 0) КАК Цена,
	                |	ВтТовары.Номенклатура.КодТНВЭД.ОбязательнаяМТ КАК ОбязательнаяМТ
	                |ИЗ
	                |	ВтТовары КАК ВтТовары
	                |		ЛЕВОЕ СОЕДИНЕНИЕ ВтЦены КАК ВтЦены
	                |		ПО ВтТовары.Номенклатура = ВтЦены.Номенклатура
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ВтТовары.Номенклатура,
	                |	ВтТовары.ХарактеристикаНоменклатуры,
	                |	ВтТовары.Номенклатура.КодТНВЭД.ОбязательнаяМТ,
	                |	ЕСТЬNULL(ВтЦены.Цена, 0)
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Номенклатура,
	                |	ХарактеристикаНоменклатуры
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |	ВтТовары.ХарактеристикаНоменклатуры,
	                |	ВтТовары.ШтрихКод
	                |ИЗ
	                |	ВтТовары КАК ВтТовары
	                |ГДЕ
	                |	ВтТовары.Номенклатура.КодТНВЭД.ОбязательнаяМТ = ИСТИНА";
	
	Возврат ТекстЗапроса;
КонецФункции // ()

