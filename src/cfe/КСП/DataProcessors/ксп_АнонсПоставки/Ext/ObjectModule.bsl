
// Анонс поставки
// Формирование XML файла по формату FE714 на основании документа продажи.
//
// Параметры:
//  СсылкаОрдерНаПродажу  	- СсылкаДокументы.ЗаказНаПеремещение
//  ПутьКФайлуВыгрузки  	- Строка - путь к файлу выгрузки 
//	ОписаниеОшибки			- Описание ошибки , если она есть 
//
// Возвращаемое значение:
//   булево   - истина если удалось сделать выгрузку , иначе ложь и описание ошибки .
Функция ФормированиеФайлаXMLПоФормату_FE720(СсылкаОрдерНаПродажу, ПутьКФайлуВыгрузки, UUIDФайла, ДатаФормированияФайла,  Лог)  Экспорт
	
	Если не ЗначениеЗаполнено(СсылкаОрдерНаПродажу) Тогда
		ксп_Элис_ОбщегоНазначения.ЗаписатьВЛог(Лог,  "Файл выгрузки не сформирован. Пустая ссылка на документ ""Заказ на перемещение""", "ERR");
		Возврат ложь;
	КонецЕсли;
	
	// собираем данные для выгрузки из БД в табилцы 
	
	#Область ПоляЗапросаДляАнонсаПоставки
	//UUID		- Номенклатура
	//size		- ХарактеристикаНоменклатуры
	//ean			- "не передаем" 
	//quantity	- Количество
	//price		- Цена
	//labelCode	- ШтрихКод
	#КонецОбласти

	ТипЦенДляАнонсаПоставки = Справочники.ВидыЦен.НайтиПоНаименованию("Прайс-лист", Истина);// еще есть "Розничные цены"
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДляВыгрузкиНоменклатурыПоФормату_FE720();
	Запрос.УстановитьПараметр("СсылкаОрдерНаПродажу", СсылкаОрдерНаПродажу);
	Запрос.УстановитьПараметр("ТипЦенПараметр", ТипЦенДляАнонсаПоставки);
	
	//Поликарпов А.А. 13.09.23 обр.0000060126
	//Запрос.Параметры.Вставить("ДатаДок"	, ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаОрдерНаПродажу,"Дата"));
	// ЕНС. отключил 
//	ДокПродажа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаОрдерНаПродажу,"ДокументПродажи"); 
	// ЕНС . В УПП это
	// - ВозвратПоставщику
	// - Перемещение
	// - Продажа
	// В ЕРП:
	// - ПеремещениеТоваров
	ДатаПродажи = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаОрдерНаПродажу,"Дата");//ЕНС поменял ДокПродажа на СсылкаОрдерНаПродажу
	//Если Не ЗначениеЗаполнено(ДатаПродажи) Тогда                                
	//	ксп_Элис_ОбщегоНазначения.ЗаписатьВЛог(Лог,  "Файл выгрузки не сформирован. Нет документа <Перемещение товаров> или в нем не заполнена дата (что невозможно, т.к. без даты он не запишется)", "ERR");
	//	Возврат ложь;
	//КонецЕсли;
	Запрос.Параметры.Вставить("ДатаДок", ДатаПродажи); 
	
	МассивПакетов = Запрос.ВыполнитьПакет();

	СмещениеИндекс = 5;
	
	#Область FE720_ПоляНоменклатуры
	//Номенклатура                            
	//ХарактеристикаНоменклатуры
	//Количество
	//Цена
	//ОбязательнаяМТ                            
	#КонецОбласти
	ТабНоменклатура 		= МассивПакетов[СмещениеИндекс + 0].Выгрузить();	
	
	#Область FE720_ПоляШтрихкоды
	//ХарактеристикаНоменклатуры
	//ШтрихКод
	#КонецОбласти
	ТабШтрихкоды 		= МассивПакетов[СмещениеИндекс + 1].Выгрузить();	
	
	//FE720
	// Вспомогательная структура для рекурсивного заполения , в ней хранятся узлы XDTO и константы значения для заполнения
	Параметры = новый Структура;
	
	Параметры.Вставить("ПространствоИмен","http://service.profashionsolutions.ru/fe720_r002"); 
	
	// константы  
	НастройкиФФ = ОбменСФулфилментСервер.ПолучитьНастройкиФулфилментДляТекущейБазы();
	Параметры.Вставить("Shop", 	НастройкиФФ.Shop);  
	Параметры.Вставить("Token",	НастройкиФФ.Token); 
	
	// берем коренвое свойство 
	Имя_shipmentAnnouncementRequest = "shipmentAnnouncementRequest";
	Объект_shipmentAnnouncementRequest = ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, Имя_shipmentAnnouncementRequest);
	
	// сформировали пустой скелет что бы не делать этого руками 
	ОбменСФулфилментСервер.ЗаполнитьПустымиСвойствамиОбъектРекурсивно(Параметры, Объект_shipmentAnnouncementRequest);
	
	// заполняем параметры поставки 
	
	Параметры.service.shop 			=  Параметры.shop;
	Параметры.service.token 		=  Параметры.token;
	Параметры.service.messageId 	=  UUIDФайла;
	Параметры.service.messageDate 	=  ОбменСФулфилментСервер.ПолучитьДатуСтрокойФомата_XSD_duration(ДатаФормированияФайла); //"P2023Y03M11DT13H33M22S"; //ДатаФормированияФайла-'00010101';  //duration  xsd:duration
	
	Для каждого СтрНоменклатура Из ТабНоменклатура Цикл
		item = ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctItemRequest");
		
		item.uuid 		= строка(СтрНоменклатура.Номенклатура.УникальныйИдентификатор());
		item.size 		= строка(СтрНоменклатура.ХарактеристикаНоменклатуры.УникальныйИдентификатор());
		item.quantity   = СтрНоменклатура.Количество;
		item.price		= СтрНоменклатура.Цена;
		
		item.ean		= "";
		
		
		labelCodes		= ОбменСФулфилментСервер.ПолучитьОбъектМоейФабрики(Параметры, "ctlabelCodes");
		
		НайденыеШтрихкоды = ТабШтрихкоды.найтиСтроки(Новый Структура("ХарактеристикаНоменклатуры",СтрНоменклатура.ХарактеристикаНоменклатуры));
		Для каждого СтрШтрихкод Из НайденыеШтрихкоды Цикл
			
			DataMatrix = СтрШаблон("01%121%2",
				сред(СтрШтрихкод.ШтрихКод,1,14),
				сред(СтрШтрихкод.ШтрихКод,15));
			
			labelCodes.labelCode.Добавить(DataMatrix);
		КонецЦикла;
		
		item.labelCodes = labelCodes;
		
		Параметры.items.item.Добавить(item);
	КонецЦикла;

	
	
	Попытка
		МойXML = Новый ЗаписьXML;
		МойXML.ОткрытьФайл(ПутьКФайлуВыгрузки, "UTF-8");
		МойXML.ЗаписатьОбъявлениеXML();
		ФабрикаXDTO.ЗаписатьXML(МойXML, Объект_shipmentAnnouncementRequest, Имя_shipmentAnnouncementRequest);  
		МойXML.Закрыть();
	Исключение
		Сообщение  = СтрШаблон("Ошибка записи выгрузки анонса поставки XML. Причина: %1", ОписаниеОшибки());
		ксп_Элис_ОбщегоНазначения.ЗаписатьВЛог(Лог, Сообщение, "ERR");
		Возврат ложь;		
	КонецПопытки;
	
	Сообщение  = СтрШаблон("Сформировали файл выгрузки анонса поставки. Количество элементов номенклатуры %1 шт.", ТабНоменклатура.Количество());
	ксп_Элис_ОбщегоНазначения.ЗаписатьВЛог(Лог, Сообщение);


	возврат истина;
КонецФункции // ()

// Анонс поставки
Функция ПолучитьТекстЗапросаДляВыгрузкиНоменклатурыПоФормату_FE720()
     ТекстЗапроса =
	//  "ВЫБРАТЬ
	//|	ОрдерНаПродажуТовары.Номенклатура,
	//|	ОрдерНаПродажуТовары.ХарактеристикаНоменклатуры,
	//|	СУММА(ОрдерНаПродажуТовары.Количество) КАК Количество,
	//|	ОрдерНаПродажуТовары.ШтрихКод
	//|ПОМЕСТИТЬ ВтТовары
	//|ИЗ
	//|	Документ.ОрдерНаПродажу.Товары КАК ОрдерНаПродажуТовары
	//|ГДЕ
	//|	ОрдерНаПродажуТовары.Ссылка = &СсылкаОрдерНаПродажу
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ОрдерНаПродажуТовары.ШтрихКод,
	//|	ОрдерНаПродажуТовары.ХарактеристикаНоменклатуры,
	//|	ОрдерНаПродажуТовары.Номенклатура
	//|;
	
	"ВЫБРАТЬ
	|	ОрдерНаПродажуТовары.Номенклатура КАК Номенклатура,
	|	ОрдерНаПродажуТовары.Характеристика КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВтТовары_предв
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК ОрдерНаПродажуТовары
	|ГДЕ
	|	ОрдерНаПродажуТовары.Ссылка = &СсылкаОрдерНаПродажу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод,
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВтШтрихкоды
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Номенклатура В
	|			(ВЫБРАТЬ
	|				ВтТовары_предв.Номенклатура
	|			ИЗ
	|				ВтТовары_предв КАК ВтТовары_предв)
	|	И ШтрихкодыНоменклатуры.Характеристика В
	|			(ВЫБРАТЬ
	|				ВтТовары_предв.ХарактеристикаНоменклатуры
	|			ИЗ
	|				ВтТовары_предв КАК ВтТовары_предв)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрдерНаПродажуТовары.Номенклатура КАК Номенклатура,
	|	ОрдерНаПродажуТовары.Характеристика КАК ХарактеристикаНоменклатуры,
	|	ЕСТЬNULL(ВтШтрихкоды.Штрихкод, НЕОПРЕДЕЛЕНО) КАК ШтрихКод,
	|	СУММА(ОрдерНаПродажуТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ЗаказНаПеремещение.Товары КАК ОрдерНаПродажуТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтШтрихкоды КАК ВтШтрихкоды
	|		ПО (ВтШтрихкоды.Номенклатура = ОрдерНаПродажуТовары.Номенклатура)
	|			И (ВтШтрихкоды.Характеристика = ОрдерНаПродажуТовары.Характеристика)
	|ГДЕ
	|	ОрдерНаПродажуТовары.Ссылка = &СсылкаОрдерНаПродажу
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтШтрихкоды.Штрихкод,
	|	ОрдерНаПродажуТовары.Характеристика,
	|	ОрдерНаПродажуТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВтНоменклатура
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ПОМЕСТИТЬ ВтЦены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&ДатаДок,
	|			ВидЦены = &ТипЦенПараметр
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						ВтНоменклатура.Номенклатура
	|					ИЗ
	|						ВтНоменклатура КАК ВтНоменклатура)) КАК ЦеныНоменклатурыСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВтТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	СУММА(ВтТовары.Количество) КАК Количество,
	|	ЕСТЬNULL(ВтЦены.Цена, 0) КАК Цена,
	|	ВтТовары.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар КАК ОбязательнаяМТ
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтЦены КАК ВтЦены
	|		ПО ВтТовары.Номенклатура = ВтЦены.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтТовары.Номенклатура,
	|	ВтТовары.ХарактеристикаНоменклатуры,
	|	ВтТовары.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар,
	|	ЕСТЬNULL(ВтЦены.Цена, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ВтТовары.ШтрихКод КАК ШтрихКод
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|ГДЕ
	|	ВтТовары.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар = ИСТИНА";
	
	Возврат ТекстЗапроса;
КонецФункции // ()

