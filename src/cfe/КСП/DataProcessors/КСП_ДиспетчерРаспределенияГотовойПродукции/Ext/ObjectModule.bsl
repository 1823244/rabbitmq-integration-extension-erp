
#Область ПрограммныйИнтерфейс

Процедура ЗаполнитьРаспределение() Экспорт
	
	ИнициализироватьДеревоРаспределения();
	
	СостоянияРаспределения = Перечисления.РаспределениеЗапасовСостояния;
	СостоянияДоступности = Новый Массив;
	СостоянияДоступности.Добавить(СостоянияРаспределения.ОстатокНаСкладе);
	СостоянияДоступности.Добавить(СостоянияРаспределения.ОжидаемоеПоступление);
	СостоянияДоступности.Добавить(СостоянияРаспределения.ОбеспеченНаСкладе);
	СостоянияДоступности.Добавить(СостоянияРаспределения.ОбеспеченКДате);
	СостоянияДоступности.Добавить(СостоянияРаспределения.Обеспечить);
	СостоянияДоступности.Добавить(СостоянияРаспределения.ВРезерве);
	
	ТипДокументаРаспределение = Перечисления.КСП_ТипДокументаСлужебногоРезерва.РаспределениеГотовойПродукции;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала",					НачалоГода(ДатаРаспределения));
	Запрос.УстановитьПараметр("ДатаОкончания",				ДатаРаспределения);
	Запрос.УстановитьПараметр("СкладОстатков",				СкладОстатков);
	Запрос.УстановитьПараметр("СценарийПланирования",		СценарийПланирования);
	Запрос.УстановитьПараметр("ПодразделениеОпт",			ПодразделениеОпт);
	Запрос.УстановитьПараметр("ПодразделениеРозница",		ПодразделениеРозница);
	Запрос.УстановитьПараметр("ПодразделениеECOM",			ПодразделениеECOM);
	Запрос.УстановитьПараметр("СостоянияДоступности",		СостоянияДоступности);
	Запрос.УстановитьПараметр("ТипДокументаРаспределение",	ТипДокументаРаспределение);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПланыПродажОбороты.Номенклатура КАК Номенклатура,
	|	ПланыПродажОбороты.Характеристика КАК Характеристика,
	|	ПланыПродажОбороты.Подразделение КАК Подразделение,
	|	ПланыПродажОбороты.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ втПланыПродаж
	|ИЗ
	|	РегистрНакопления.ПланыПродаж.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Сценарий = &СценарийПланирования
	|				И Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПланов.Утвержден)
	|				И Подразделение В (&ПодразделениеОпт, &ПодразделениеРозница, &ПодразделениеECOM)) КАК ПланыПродажОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Влож.Номенклатура КАК Номенклатура,
	|	Влож.НоменклатураНаименование КАК НоменклатураНаименование,
	|	Влож.Характеристика КАК Характеристика,
	|	СУММА(ВЫБОР
	|			КОГДА Влож.Подразделение = &ПодразделениеОпт
	|				ТОГДА Влож.Запланировано
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПлановоеОпт,
	|	СУММА(ВЫБОР
	|			КОГДА Влож.Подразделение = &ПодразделениеРозница
	|				ТОГДА Влож.Запланировано
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПлановоеРозница,
	|	СУММА(ВЫБОР
	|			КОГДА Влож.Подразделение = &ПодразделениеECOM
	|				ТОГДА Влож.Запланировано
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПлановоеECOM,
	|	СУММА(Влож.Свободно) КАК КоличествоОстаток,
	|	СУММА(Влож.Свободно) КАК КоличествоДоступно,
	|	СУММА(ВЫБОР
	|			КОГДА Влож.Подразделение = &ПодразделениеОпт
	|				ТОГДА Влож.Зарезервировано
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоРаспределеноОпт,
	|	СУММА(ВЫБОР
	|			КОГДА Влож.Подразделение = &ПодразделениеРозница
	|				ТОГДА Влож.Зарезервировано
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоРаспределеноРозница,
	|	СУММА(ВЫБОР
	|			КОГДА Влож.Подразделение = &ПодразделениеECOM
	|				ТОГДА Влож.Зарезервировано
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоРаспределеноECOM
	|ПОМЕСТИТЬ втИтоговыеДанные
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИнформацияОДоступности.Номенклатура КАК Номенклатура,
	|		ИнформацияОДоступности.Характеристика КАК Характеристика,
	|		ИнформацияОДоступности.Свободно КАК Свободно,
	|		0 КАК Зарезервировано,
	|		0 КАК Запланировано,
	|		СпрНоменклатура.Наименование КАК НоменклатураНаименование,
	|		NULL КАК Подразделение
	|	ИЗ
	|		РегистрСведений.РаспределениеЗапасов КАК ИнформацияОДоступности
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|			ПО (СпрНоменклатура.Ссылка = ИнформацияОДоступности.Номенклатура)
	|	ГДЕ
	|		ИнформацияОДоступности.Состояние В(&СостоянияДоступности)
	|		И ИнформацияОДоступности.Свободно <> 0
	|		И ИнформацияОДоступности.Склад = &СкладОстатков
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ИнформацияОДоступности.Номенклатура,
	|		ИнформацияОДоступности.Характеристика,
	|		0,
	|		ИнформацияОДоступности.Зарезервировано,
	|		0,
	|		СпрНоменклатура.Наименование,
	|		ДокРаспределения.Подразделение
	|	ИЗ
	|		РегистрСведений.РаспределениеЗапасов КАК ИнформацияОДоступности
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|			ПО (СпрНоменклатура.Ссылка = ИнформацияОДоступности.Номенклатура)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление КАК ДокРаспределения
	|			ПО (ДокРаспределения.Ссылка = ИнформацияОДоступности.ЗаказНаОтгрузку)
	|	ГДЕ
	|		ИнформацияОДоступности.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ВРезерве)
	|		И ИнформацияОДоступности.Зарезервировано <> 0
	|		И ИнформацияОДоступности.Склад = &СкладОстатков
	|		И ДокРаспределения.КСП_ТипДокументаСлужебногоРезерва = &ТипДокументаРаспределение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		втПланыПродаж.Номенклатура,
	|		втПланыПродаж.Характеристика,
	|		0,
	|		0,
	|		втПланыПродаж.Количество,
	|		СпрНоменклатура.Наименование,
	|		втПланыПродаж.Подразделение
	|	ИЗ
	|		втПланыПродаж КАК втПланыПродаж
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|			ПО (СпрНоменклатура.Ссылка = втПланыПродаж.Номенклатура)) КАК Влож
	|
	|СГРУППИРОВАТЬ ПО
	|	Влож.Номенклатура,
	|	Влож.НоменклатураНаименование,
	|	Влож.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИтоговыеДанные.Номенклатура КАК Номенклатура,
	|	втИтоговыеДанные.НоменклатураНаименование КАК НоменклатураНаименование,
	|	втИтоговыеДанные.Характеристика КАК Характеристика,
	|	втИтоговыеДанные.КоличествоПлановоеОпт КАК КоличествоПлановоеОпт,
	|	втИтоговыеДанные.КоличествоПлановоеРозница КАК КоличествоПлановоеРозница,
	|	втИтоговыеДанные.КоличествоПлановоеECOM КАК КоличествоПлановоеECOM,
	|	втИтоговыеДанные.КоличествоОстаток КАК КоличествоОстаток,
	|	втИтоговыеДанные.КоличествоДоступно КАК КоличествоДоступно,
	|	втИтоговыеДанные.КоличествоРаспределеноОпт КАК КоличествоРаспределеноОпт,
	|	втИтоговыеДанные.КоличествоРаспределеноРозница КАК КоличествоРаспределеноРозница,
	|	втИтоговыеДанные.КоличествоРаспределеноECOM КАК КоличествоРаспределеноECOM,
	|	ВЫБОР
	|		КОГДА втИтоговыеДанные.КоличествоПлановоеОпт > 0
	|			ТОГДА втИтоговыеДанные.КоличествоРаспределеноОпт / втИтоговыеДанные.КоличествоПлановоеОпт
	|		ИНАЧЕ 0
	|	КОНЕЦ * 100 КАК ПроцентОбеспеченияОпт,
	|	ВЫБОР
	|		КОГДА втИтоговыеДанные.КоличествоПлановоеРозница > 0
	|			ТОГДА втИтоговыеДанные.КоличествоРаспределеноРозница / втИтоговыеДанные.КоличествоПлановоеРозница
	|		ИНАЧЕ 0
	|	КОНЕЦ * 100 КАК ПроцентОбеспеченияРозница,
	|	ВЫБОР
	|		КОГДА втИтоговыеДанные.КоличествоПлановоеECOM > 0
	|			ТОГДА втИтоговыеДанные.КоличествоРаспределеноECOM / втИтоговыеДанные.КоличествоПлановоеECOM
	|		ИНАЧЕ 0
	|	КОНЕЦ * 100 КАК ПроцентОбеспеченияECOM
	|ИЗ
	|	втИтоговыеДанные КАК втИтоговыеДанные
	|
	|УПОРЯДОЧИТЬ ПО
	|	втИтоговыеДанные.НоменклатураНаименование
	|ИТОГИ
	|	СУММА(КоличествоПлановоеОпт),
	|	СУММА(КоличествоПлановоеРозница),
	|	СУММА(КоличествоПлановоеECOM),
	|	СУММА(КоличествоОстаток),
	|	СУММА(КоличествоДоступно),
	|	СУММА(КоличествоРаспределеноОпт),
	|	СУММА(КоличествоРаспределеноРозница),
	|	СУММА(КоличествоРаспределеноECOM),
	|	ВЫБОР
	|		КОГДА СУММА(втИтоговыеДанные.КоличествоПлановоеОпт) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втИтоговыеДанные.КоличествоРаспределеноОпт) / СУММА(втИтоговыеДанные.КоличествоПлановоеОпт)
	|	КОНЕЦ * 100 КАК ПроцентОбеспеченияОпт,
	|	ВЫБОР
	|		КОГДА СУММА(втИтоговыеДанные.КоличествоПлановоеРозница) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втИтоговыеДанные.КоличествоРаспределеноРозница) / СУММА(втИтоговыеДанные.КоличествоПлановоеРозница)
	|	КОНЕЦ * 100 КАК ПроцентОбеспеченияРозница,
	|	ВЫБОР
	|		КОГДА СУММА(втИтоговыеДанные.КоличествоПлановоеECOM) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втИтоговыеДанные.КоличествоРаспределеноECOM) / СУММА(втИтоговыеДанные.КоличествоПлановоеECOM)
	|	КОНЕЦ * 100 КАК ПроцентОбеспеченияECOM
	|ПО
	|	Номенклатура";
	
	Распределение.Строки.Очистить();
	
	ЧисловыеКолонки =
	"КоличествоОстаток, КоличествоДоступно,
	|
	|КоличествоПлановоеОпт,		КоличествоПлановоеРозница,		КоличествоПлановоеECOM,
	|КоличествоРаспределеноОпт,	КоличествоРаспределеноРозница,	КоличествоРаспределеноECOM,
	|ПроцентОбеспеченияОпт,		ПроцентОбеспеченияРозница,		ПроцентОбеспеченияECOM";
	
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		СтрТабНом = Распределение.Строки.Добавить();
		
		СтрТабНом.НоменклатураХарактеристика = ВыборкаНоменклатура.Номенклатура;
		ЗаполнитьЗначенияСвойств(СтрТабНом, ВыборкаНоменклатура, ЧисловыеКолонки);
		
		ВыборкаХаракт = ВыборкаНоменклатура.Выбрать();
		Пока ВыборкаХаракт.Следующий() Цикл
			
			СтрТабХар = СтрТабНом.Строки.Добавить();
			СтрТабХар.Уровень = 1;
			СтрТабХар.НоменклатураХарактеристика = ВыборкаХаракт.Характеристика;
			ЗаполнитьЗначенияСвойств(СтрТабХар, ВыборкаХаракт, ЧисловыеКолонки);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЗаписатьРаспределение() Экспорт
	
	РезервироватьНоменклатуруДляРаспределения(ПодразделениеОпт,		"КоличествоДоступноОпт");
	РезервироватьНоменклатуруДляРаспределения(ПодразделениеРозница,	"КоличествоДоступноРозница");
	РезервироватьНоменклатуруДляРаспределения(ПодразделениеECOM,	"КоличествоДоступноECOM");
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьДеревоРаспределения()
	
	Если ЗначениеЗаполнено(Распределение.Колонки) Тогда
		Возврат;
	КонецЕсли;
	
	Распределение = Новый ДеревоЗначений;
	
	// Все доступные типы колонок для дерева распределения
	ТипНоменклатураХарактеристика = Новый ОписаниеТипов(
		"СправочникСсылка.Номенклатура, СправочникСсылка.ХарактеристикиНоменклатуры");
	ТипЧисло_15_3		= ОбщегоНазначения.ОписаниеТипаЧисло(15, 3);
	ТипЧисло_15_3_Плюс	= ОбщегоНазначения.ОписаниеТипаЧисло(15, 3, ДопустимыйЗнак.Неотрицательный);
	ТипЧисло_1_0		= ОбщегоНазначения.ОписаниеТипаЧисло(1, 0);

	Распределение.Колонки.Добавить("НоменклатураХарактеристика",	ТипНоменклатураХарактеристика);
	Распределение.Колонки.Добавить("КоличествоОстаток",				ТипЧисло_15_3);
	Распределение.Колонки.Добавить("КоличествоДоступно",			ТипЧисло_15_3);
	Распределение.Колонки.Добавить("КоличествоПлановоеОпт",			ТипЧисло_15_3);
	Распределение.Колонки.Добавить("КоличествоПлановоеРозница",		ТипЧисло_15_3);
	Распределение.Колонки.Добавить("КоличествоПлановоеECOM",		ТипЧисло_15_3);
	Распределение.Колонки.Добавить("КоличествоРаспределеноОпт",		ТипЧисло_15_3);
	Распределение.Колонки.Добавить("КоличествоРаспределеноРозница",	ТипЧисло_15_3);
	Распределение.Колонки.Добавить("КоличествоРаспределеноECOM",	ТипЧисло_15_3);
	Распределение.Колонки.Добавить("ПроцентОбеспеченияОпт",			ТипЧисло_15_3);
	Распределение.Колонки.Добавить("ПроцентОбеспеченияРозница",		ТипЧисло_15_3);
	Распределение.Колонки.Добавить("ПроцентОбеспеченияECOM",		ТипЧисло_15_3);
	Распределение.Колонки.Добавить("КоличествоДоступноОпт",			ТипЧисло_15_3_Плюс);
	Распределение.Колонки.Добавить("КоличествоДоступноРозница",		ТипЧисло_15_3_Плюс);
	Распределение.Колонки.Добавить("КоличествоДоступноECOM",		ТипЧисло_15_3_Плюс);
	Распределение.Колонки.Добавить("Уровень",						ТипЧисло_1_0);
	
КонецПроцедуры

Процедура РезервироватьНоменклатуруДляРаспределения(Подразделение, ПолеКоличество)
	
	Если НЕ ЗначениеЗаполнено(Распределение.Строки) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Подразделение) Тогда
		Возврат;
	КонецЕсли;
	
	// Записывать распределение будем через "Документ.ЗаказНаВнутреннееПотребление".
	// Он позволяет зарезервировать товар, забрав его со свободного остатка - из колонки "КоличествоДоступно".
	// Товары, которые будут в этом документе попадут после проведения документа в колонки "КоличествоРаспределеноОпт",
	// "КоличествоРаспределеноРозница" и "КоличествоРаспределеноECOM" соответственно.
	
	// 1. Определим товары для обработки и достанем их вспомогательные реквизиты.
	ТоварыДляОбработки = Новый Массив;
	Для Каждого СтрДерТовар Из Распределение.Строки Цикл
		Если ЗначениеЗаполнено(СтрДерТовар[ПолеКоличество]) Тогда
			ТоварыДляОбработки.Добавить(СтрДерТовар.НоменклатураХарактеристика);
		КонецЕсли;
	КонецЦикла;
	
	НужныеРеквизитыТоваров = "Код, Наименование, ЕдиницаИзмерения, КоллекцияНоменклатуры";
	РеквизитыТоваров = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(ТоварыДляОбработки, НужныеРеквизитыТоваров);
	
	// 2. Подготовим строки для записи, сгруппировав их по полю "КоллекцияНоменклатуры".
	// Нужны только строки, где заполнено "КолВоТовараКРаспределению".
	
	СтрокиКоллекций = Новый Соответствие;
	Для Каждого СтрДерТовар Из Распределение.Строки Цикл
		РеквизитыТовара = РеквизитыТоваров.Получить(СтрДерТовар.НоменклатураХарактеристика);
		Если РеквизитыТовара = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(РеквизитыТовара.КоллекцияНоменклатуры) Тогда
			ТекстОшибки = НСтр(
				"ru = 'Для товара [%1] (код = %2) не указана коллекция!'");
			ТекстОшибки = СтрШаблон(ТекстОшибки,
				РеквизитыТовара.Наименование, РеквизитыТовара.Код);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, СтрДерТовар.НоменклатураХарактеристика);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
		СтрокиТекущейКоллеции = СтрокиКоллекций.Получить(РеквизитыТовара.КоллекцияНоменклатуры);
		Если СтрокиТекущейКоллеции = Неопределено Тогда
			СтрокиТекущейКоллеции = Новый Массив;
			СтрокиКоллекций.Вставить(РеквизитыТовара.КоллекцияНоменклатуры, СтрокиТекущейКоллеции);
		КонецЕсли;
		
		Для Каждого СтрДерХаракт Из СтрДерТовар.Строки Цикл
			Если ЗначениеЗаполнено(СтрДерХаракт[ПолеКоличество]) Тогда
				СтрокиТекущейКоллеции.Добавить(СтрДерХаракт);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	// 3. Теперь обрабатываем эти группы из п.2.
	// Для каждой группы до найти подходящий документ вида "Документ.ЗаказНаВнутреннееПотребление" по реквизитам:
	// - "Подразделение" = "ПодразделениеОпт"/"ПодразделениеРозница"/"ПодразделениеECOM"
	// - "КСП_Коллекция" = "КоллекцияНоменклатуры"
	// Чтобы не спутать с другими документами, ищем его по дополнительному реквизиту с именем
	// "ДокументРаспределенияГотовойПродукции" в ТЧ "Документ.ЗаказНаВнутреннееПотребление.ДополнительныеРеквизиты".
	// Если не находим - создаём новый.
	
	МенеджерДокумента = Документы.ЗаказНаВнутреннееПотребление;
	
	Для Каждого ДанныеКоллекции ИЗ СтрокиКоллекций Цикл
		
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		
		КоллекцияНоменклатуры = ДанныеКоллекции.Ключ;
		СтрокиДерева = ДанныеКоллекции.Значение;
		
		ЗаказОбъект = ЗаказНаВнутреннееПотреблениеДляРезерва(Подразделение, КоллекцияНоменклатуры);
	
		// Дополняем ТЧ "Документ.ЗаказНаВнутреннееПотребление.Товары"
		
		// Служебные данные для обработки строки добавленного товара (урезанная бизнес-логика
		// из формы "Документ.ЗаказНаВнутреннееПотребление"
		ВариантОбеспеченияРезерв = Перечисления.ВариантыОбеспечения.СоСклада;
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		
		Для Каждого СтрДерХаракт Из СтрокиДерева Цикл
			
			СтрДерТовар = СтрДерХаракт.Родитель;
			
			ТекущийТовар = СтрДерТовар.НоменклатураХарактеристика;
			РеквизитыТовара = РеквизитыТоваров.Получить(ТекущийТовар);
			
			КолВоКРаспределению = СтрДерХаракт[ПолеКоличество];
			
			СтрокиТовара = ЗаказОбъект.Товары.НайтиСтроки(
				Новый Структура("Номенклатура, Характеристика", ТекущийТовар, СтрДерХаракт.НоменклатураХарактеристика));
			
			Если ЗначениеЗаполнено(СтрокиТовара) Тогда
				ТекущаяСтрока = СтрокиТовара[0];
				НовоеКоличество = ТекущаяСтрока.Количество + КолВоКРаспределению;
				
				Если НовоеКоличество < 0 Тогда
					ТекстОшибки = НСтр(
						"ru = 'Для товара [%1] (код = %2), характ-ка [%3] в [%4] будет отрицательное количество!'");
					ТекстОшибки = СтрШаблон(ТекстОшибки,
						РеквизитыТовара.Наименование,
						РеквизитыТовара.Код,
						СтрДерХаракт.НоменклатураХарактеристика,
						ЗаказОбъект);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЗаказОбъект.Ссылка);
					ВызватьИсключение ТекстОшибки;
				КонецЕсли;
				
				ТекущаяСтрока.Количество			= НовоеКоличество;
				ТекущаяСтрока.КоличествоУпаковок	= НовоеКоличество;
				
			Иначе
				ТекущаяСтрока = ЗаказОбъект.Товары.Добавить();
				
				ТекущаяСтрока.Номенклатура			= ТекущийТовар;
				ТекущаяСтрока.Характеристика		= СтрДерХаракт.НоменклатураХарактеристика;
				ТекущаяСтрока.Упаковка				= РеквизитыТовара.ЕдиницаИзмерения;
				ТекущаяСтрока.Количество			= КолВоКРаспределению;
				ТекущаяСтрока.КоличествоУпаковок	= КолВоКРаспределению;
				ТекущаяСтрока.ВариантОбеспечения	= ВариантОбеспеченияРезерв;
				
			КонецЕсли;
			
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
			
		КонецЦикла;
	
		// 3. Проводим документ, он должен убрать из свободного остатка выбранные товары
		
		Если (ЗаказОбъект.ЭтоНовый() И ЗначениеЗаполнено(ЗаказОбъект.Товары))
			ИЛИ (НЕ ЗаказОбъект.ЭтоНовый() И ЗаказОбъект.Модифицированность()) Тогда
			
			МенеджерДокумента.КСП_УстановитьДопСвойствоДиспетчераРаспределенияГотовойПродукции(ЗаказОбъект);
			Если ЗначениеЗаполнено(ЗаказОбъект.Товары) Тогда
				ЗаказОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ЗаказОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);  // оставим его просто записанным
			КонецЕсли;
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЗаказНаВнутреннееПотреблениеДляРезерва(Подразделение, КоллекцияНоменклатуры)
	
	ТипДокументаРезерва = ОбщегоНазначения.ПредопределенныйЭлемент(
		"Перечисление.КСП_ТипДокументаСлужебногоРезерва.РаспределениеГотовойПродукции");
	
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("Подразделение",			Подразделение);
	//Запрос.УстановитьПараметр("КоллекцияНоменклатуры",	КоллекцияНоменклатуры);
	//Запрос.УстановитьПараметр("ТипДокумента",			ТипДокументаРезерва);
	//
	//Запрос.Текст =
	//"ВЫБРАТь
	//|	Док.Ссылка
	//|ИЗ
	//|	Документ.ЗаказНаВнутреннееПотребление КАК Док
	//|ГДЕ
	//|	Док.Подразделение = &Подразделение
	//|	И Док.КСП_Коллекция = &КоллекцияНоменклатуры
	//|	И Док.КСП_ТипДокументаСлужебногоРезерва = &ТипДокумента
	//|	И НЕ Док.ПометкаУдаления
	//|";
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//Если Выборка.Количество() > 1 Тогда
	//	ТекстОшибки = НСтр(
	//		"ru = 'Найдено более одного документа для распределения готовой продукции коллекции [%1] подразделения [%2]'");
	//	ВызватьИсключение СтрШаблон(ТекстОшибки, КоллекцияНоменклатуры, Подразделение);
	//ИначеЕсли Выборка.Следующий() Тогда
	//	Возврат Выборка.Ссылка.ПолучитьОбъект();
	//КонецЕсли;
	
	ЗаказОбъект = Документы.ЗаказНаВнутреннееПотребление.СоздатьДокумент();
	
	ЗаказОбъект.Дата					= ТекущаяДатаСеанса();
	ЗаказОбъект.Приоритет				= Справочники.Приоритеты.НайтиПоНаименованию("Средний");
	ЗаказОбъект.ХозяйственнаяОперация	= Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию;
	ЗаказОбъект.Организация				= Организация;
	ЗаказОбъект.Склад					= СкладОстатков;
	ЗаказОбъект.Подразделение			= Подразделение;
	ЗаказОбъект.Ответственный			= ПараметрыСеанса.ТекущийПользователь;
	
	ЗаказОбъект.КСП_Коллекция						= КоллекцияНоменклатуры;
	ЗаказОбъект.КСП_ТипДокументаСлужебногоРезерва	= ТипДокументаРезерва;
	
	ЗаказОбъект.Комментарий = "Создан автоматически обработкой 'Диспетчер распределения готовой продукции'";
	
	
	Возврат ЗаказОбъект;
	
КонецФункции

#КонецОбласти
