
// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ТекущийУровеньЛогов() Экспорт
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	мис_УровеньЛогов.Уровень КАК Уровень
		|ИЗ
		|	РегистрСведений.мис_УровеньЛогов КАК мис_УровеньЛогов";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Уровень;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	Возврат 2; //инфо
	
КонецФункции

// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура УстановитьУровень(Уровень) Экспорт
	
НаборЗаписей = РегистрыСведений.мис_УровеньЛогов.СоздатьНаборЗаписей();

// структура отбора записей регистра
//НаборЗаписей.Отбор.Регистратор.Установить(, Истина);
//НаборЗаписей.Отбор.*.Установить(*, Истина);

НаборЗаписей.Прочитать();

Если НаборЗаписей.Количество() > 0 Тогда
	НаборЗаписей.Очистить(); // очистить прочитанный набор записей
КонецЕсли;

НоваяЗапись = НаборЗаписей.Добавить();

// СЛУЖЕБНЫЕ:
НоваяЗапись.Активность = Истина;

// ИЗМЕРЕНИЯ:
НоваяЗапись.Уровень = Уровень;

// РЕСУРСЫ:
//НоваяЗапись. = ;

// РЕКВИЗИТЫ:
//НоваяЗапись. = ;

Попытка
	НаборЗаписей.Записать(Истина); // запись: замещать существующие записи			
Исключение
	//Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
	ВызватьИсключение;
КонецПопытки;

КонецПроцедуры
 
