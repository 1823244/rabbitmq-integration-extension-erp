&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УровеньЛогов = ПараметрыСеанса.мис_УровеньЛогов;
    //ПараметрыСеанса.мис_УровеньЛогов = 2;
	
	КаталогФайловЛогов = ПараметрыСеанса.мис_КаталогФайловЛогов;
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаСервере
Процедура КаталогФайловЛоговПриИзмененииНаСервере()
	//ПараметрыСеанса.мис_КаталогФайловЛогов = КаталогФайловЛогов;
	//
	//НаборКонстант["мис_КаталогФайловЛогов"] = КаталогФайловЛогов;
	//КонстантаМенеджер = Константы["мис_КаталогФайловЛогов"];
	//КонстантаЗначение = НаборКонстант["мис_КаталогФайловЛогов"];
	//Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
	//	КонстантаМенеджер.Установить(КонстантаЗначение);
	//КонецЕсли;	

	//мис_ЛоггерСервер.УстановкаПараметровСеанса(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура КаталогФайловЛоговПриИзменении(Элемент)
	КаталогФайловЛоговПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура УстановитьУровеньНаСервере()
	ПараметрыСеанса.мис_УровеньЛогов = УровеньЛогов;
	
	//НаборКонстант["мис_УровеньЛогов"] = УровеньЛогов;
	//КонстантаМенеджер = Константы["мис_УровеньЛогов"];
	//КонстантаЗначение = НаборКонстант["мис_УровеньЛогов"];
	//Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
	//	КонстантаМенеджер.Установить(КонстантаЗначение);
	//КонецЕсли;
	РегистрыСведений.мис_УровеньЛогов.УстановитьУровень(УровеньЛогов);
	
	мис_ЛоггерСервер.УстановкаПараметровСеанса(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура УровеньЛоговПриИзменении(Элемент)
	УстановитьУровеньНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура КаталогФайловЛоговНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ВыбратьКаталог();
	
КонецПроцедуры

#Область ВыборКаталогаБезМодальности

&НаКлиенте
// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ВыбратьКаталог()
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
    ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим);
    ДиалогОткрытия.ПолноеИмяФайла = "";
    Фильтр = "";//Фильтр = НСтр("ru = ‘Текст'") + "(*.txt)|*.txt";
    ДиалогОткрытия.Фильтр = Фильтр;
    ДиалогОткрытия.МножественныйВыбор = Ложь;
    ДиалогОткрытия.Заголовок = "Выберете каталог";

    ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораКаталога",ЭтаФорма);

    ДиалогОткрытия.Показать(ОписаниеОповещения);
		
КонецПроцедуры
 
&НаКлиенте
// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ПослеВыбораКаталога(ВыбранныеФайлы, ДопПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(ВыбранныеФайлы) Тогда
       Возврат;
    КонецЕсли;
    КаталогФайловЛогов = ВыбранныеФайлы[0];
	КаталогФайловЛоговПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура фдЛогSQLConnectionStringПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	ИмяКонстанты = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	ОбновитьПовторноИспользуемыеЗначения();
	
	//Если ОбновлятьИнтерфейс Тогда
	//	ОбновитьИнтерфейс = Истина;
	//	ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	//КонецЕсли;
	
	Если ИмяКонстанты <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, ИмяКонстанты);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	ИмяКонстанты = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	//Если (ИмяКонстанты = "ИспользоватьПочтовыйКлиент" ИЛИ ИмяКонстанты = "ИспользоватьБизнесПроцессыИЗадачи") 
	//	И Не НаборКонстант[ИмяКонстанты] Тогда
	//	ЭтотОбъект.Прочитать();
	//КонецЕсли;
	
	ОбновитьПовторноИспользуемыеЗначения();
	Возврат ИмяКонстанты;
	
КонецФункции

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	ЧастиИмени = СтрРазделить(РеквизитПутьКДанным, ".");
	Если ЧастиИмени.Количество() <> 2 Тогда
		Возврат "";
	КонецЕсли;
	
	ИмяКонстанты = ЧастиИмени[1];
	//КонстантаМенеджер = Константы[ИмяКонстанты];
	//КонстантаЗначение = НаборКонстант[ИмяКонстанты];
	//
	//Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
	//	КонстантаМенеджер.Установить(КонстантаЗначение);
	//КонецЕсли;
	
	Возврат ИмяКонстанты;
	
КонецФункции

&НаКлиенте
Процедура фдЛогSQLUserNameПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура фдЛогSQLPasswordПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура фдЛогSQLDBNameПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

